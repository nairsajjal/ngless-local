ngless '1.1'
input = fastq('sample.fq')
trim = 3
input = preprocess(input) using |read|:
    read = read[trim:]
    if len(read) < 10:
        discard
write(input, ofile='output.fq')


input = fastq('sample.fq')
input = preprocess(input) using |read|:
    read = substrim(read, min_quality=20)
    if len(read) < 10:
        discard
write(input, ofile='output.substrim.fq')

input = fastq('sample.fq')
input = preprocess(input) using |read|:
    read = endstrim(read, min_quality=20)
    if len(read) < 10:
        discard
write(input, ofile='output.endstrim.fq')

input = fastq('sample.fq')
input = preprocess(input) using |read|:
    read = smoothtrim(read, min_quality=20, window=4)
    if len(read) < 10:
        discard
write(input, ofile='output.smoothtrim.fq')

input = fastq('sample.fq')
input = preprocess(input) using |read|:
    read = endstrim(read, min_quality=20)
    if len(read) < 10:
        discard
    if read.avg_quality() < 31.9:
        discard
write(input, ofile='output.endstrim31.fq')


input = fastq('sample.fq')
input = preprocess(input) using |read|:
    read = read.n_to_zero_quality()
    read = substrim(read, min_quality=20)
    if len(read) < 10:
        discard
write(input, ofile='output.substrim.n_to_zero_quality.fq')

