
==================== FINAL INTERFACE ====================
2020-02-24 04:15:30.276756747 UTC

interface NGLess-1.1.0-965Np14lOUvJ2rS9XGhph5:Interpretation.Write 8065
  interface hash: e2b7d3526a07080c53073ba9b5ebe68a
  ABI hash: be1fc63f3dbba3a45a95f66caf9ac74e
  export-list hash: 2a75b1e02cffaa1b2f8217c03d9c1bec
  orphan hash: 20ea79e6083438ec4aafc947b93ff30e
  flag hash: 7eadb156ddb8bb05f9a45f101b1309fa
  opt_hash: 9851e58a0ec35d0fd39c07cdbeb6257b
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Interpretation.Write.executeWrite
  Interpretation.Write.moveOrCopyCompress
module dependencies: CmdArgs Configuration Data.FastQ Data.Sam
                     Dependencies.Embedded FileManagement FileOrStream Language NGLess
                     NGLess.NGError NGLess.NGLEnvironment Output Paths_NGLess
                     Utils.Conduit Utils.LockFile Utils.Samtools Utils.Suggestion
                     Utils.Utils Utils.Vector Version
package dependencies: JuicyPixels-3.3.4 MissingH-1.4.1.0
                      StateVar-1.2 active-0.2.0.14 adjunctions-4.4 aeson-1.4.6.0
                      ansi-terminal-0.9.1 ansi-wl-pprint-0.6.9 array-0.5.3.0 async-2.2.2
                      attoparsec-0.13.2.3 base-4.12.0.0 base-compat-0.10.5
                      base-orphans-0.8.1 base64-bytestring-1.0.0.2 bifunctors-5.5.6
                      binary-0.8.6.0 blaze-builder-0.4.1.0 bytes-0.15.5
                      bytestring-0.10.8.2 bzlib-conduit-0.3.0.2 call-stack-0.1.0
                      cereal-0.5.8.1 cereal-conduit-0.8.0 charset-0.3.7.1 colour-2.3.5
                      comonad-5.0.6 conduit-1.3.1.2 conduit-algorithms-0.0.11.0
                      conduit-extra-1.3.4 conduit-zstd-0.0.1.1 configurator-0.3.0.0
                      containers-0.6.0.1 contravariant-1.5.2 convertible-1.1.1.0
                      data-default-class-0.1.2.0 deepseq-1.4.4.0 diagrams-core-1.4.2
                      diagrams-lib-1.4.3 diagrams-solve-0.1.1 diagrams-svg-1.4.3
                      directory-1.3.3.0 distributive-0.6.1 dlist-0.8.0.7
                      dual-tree-0.2.2.1 edit-distance-0.2.2.1 errors-2.3.0
                      exceptions-0.10.4 extra-1.6.18 file-embed-0.0.11.1 filepath-1.4.2.1
                      fingertree-0.1.4.2 free-5.1.3 ghc-boot-th-8.6.5 ghc-prim-0.5.3
                      gitrev-1.3.1 hashable-1.2.7.0 hostname-1.0 inline-c-0.7.0.1
                      integer-gmp-1.0.2.0 integer-logarithms-1.0.3 intervals-0.8.1
                      kan-extensions-5.2 lens-4.17.1 linear-1.20.9 lzma-0.0.0.3
                      lzma-conduit-1.2.1 monad-loops-0.4.3 mono-traversable-1.0.15.1
                      monoid-extras-0.5.1 mtl-2.2.2 newtype-generics-0.5.4
                      old-locale-1.0.0.7 old-time-1.1.0.3 optparse-applicative-0.14.3.0
                      parsec-3.1.14.0 parsers-0.12.10 pretty-1.1.3.6 primitive-0.6.4.0
                      process-1.6.5.0 profunctors-5.3 random-1.1 reflection-2.1.5
                      regex-1.0.2.0 regex-base-0.93.2 regex-compat-0.95.1
                      regex-pcre-builtin-0.94.5.8.8.35 regex-posix-0.95.2
                      regex-tdfa-1.2.3.2 regex-tdfa-text-1.0.0.3 resourcet-1.2.2
                      safe-0.3.18 safeio-0.0.5.0 scientific-0.3.6.2 semigroupoids-5.3.4
                      split-0.2.3.3 stm-2.5.0.0 stm-chans-3.0.0.4 stm-conduit-4.0.1
                      streaming-commons-0.2.1.1 strict-0.3.2 svg-builder-0.1.1
                      tagged-0.8.6 tar-0.5.1.1 template-haskell-2.14.0.0 text-1.2.3.1
                      th-abstraction-0.3.1.0 time-1.8.0.2 time-compat-1.9.2.2
                      time-locale-compat-0.1.1.5 transformers-0.5.6.2
                      transformers-base-0.4.5.2 transformers-compat-0.6.5 unix-2.7.2.2
                      unix-compat-0.5.2 unliftio-0.2.12 unliftio-core-0.1.2.0
                      unordered-containers-0.2.10.0 utf8-string-1.0.1.1 uuid-types-1.0.3
                      vector-0.12.0.3 vector-algorithms-0.8.0.3 zlib-0.6.2.1 zstd-0.1.1.2
orphans: conduit-extra-1.3.4:Data.Conduit.Process
         regex-1.0.2.0:Text.RE.TDFA.String
         regex-tdfa-text-1.0.0.3:Text.Regex.TDFA.Text
         regex-tdfa-text-1.0.0.3:Text.Regex.TDFA.Text.Lazy
         regex-pcre-builtin-0.94.5.8.8.35:Text.Regex.PCRE.String
         regex-pcre-builtin-0.94.5.8.8.35:Text.Regex.PCRE.Sequence
         regex-pcre-builtin-0.94.5.8.8.35:Text.Regex.PCRE.ByteString.Lazy
         regex-pcre-builtin-0.94.5.8.8.35:Text.Regex.PCRE.ByteString
         regex-tdfa-1.2.3.2:Text.Regex.TDFA.ByteString
         regex-tdfa-1.2.3.2:Text.Regex.TDFA.ByteString.Lazy
         regex-tdfa-1.2.3.2:Text.Regex.TDFA.Sequence
         regex-tdfa-1.2.3.2:Text.Regex.TDFA.String
         regex-posix-0.95.2:Text.Regex.Posix.String
         regex-posix-0.95.2:Text.Regex.Posix.Sequence
         regex-posix-0.95.2:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2:Text.Regex.Posix.ByteString
         regex-base-0.93.2:Text.Regex.Base.Context
         convertible-1.1.1.0:Data.Convertible.Instances.C
         convertible-1.1.1.0:Data.Convertible.Instances.Map
         convertible-1.1.1.0:Data.Convertible.Instances.Text
         convertible-1.1.1.0:Data.Convertible.Instances.Time
         convertible-1.1.1.0:Data.Convertible.Instances.Num
         attoparsec-0.13.2.3:Data.Attoparsec.ByteString.Char8
         diagrams-lib-1.4.3:Diagrams.Animation.Active
         diagrams-lib-1.4.3:Diagrams.TwoD.Path
         diagrams-lib-1.4.3:Diagrams.TwoD.Segment
         diagrams-lib-1.4.3:Diagrams.Trail
         diagrams-lib-1.4.3:Diagrams.ThreeD.Types
         diagrams-lib-1.4.3:Diagrams.TwoD.Types
         diagrams-core-1.4.2:Diagrams.Core.Types
         monoid-extras-0.5.1:Data.Monoid.MList
         diagrams-core-1.4.2:Diagrams.Core.Points
         time-1.8.0.2:Data.Time.Clock.TAI reflection-2.1.5:Data.Reflection
         linear-1.20.9:Linear.Instances vector-0.12.0.3:Data.Vector.Unboxed
         configurator-0.3.0.0:Data.Configurator.Instances
         attoparsec-0.13.2.3:Data.Attoparsec.Text.Internal
         colour-2.3.5:Data.Colour hashable-1.2.7.0:Data.Hashable.Generic
         text-1.2.3.1:Data.Text.Lazy text-1.2.3.1:Data.Text
         binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show
         vector-0.12.0.3:Data.Vector.Fusion.Bundle
         stm-2.5.0.0:Control.Monad.STM
         transformers-0.5.6.2:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: JuicyPixels-3.3.4:Codec.Picture.Tga
                         JuicyPixels-3.3.4:Codec.Picture.Tiff
                         JuicyPixels-3.3.4:Codec.Picture.Types
                         NGLess-1.1.0-965Np14lOUvJ2rS9XGhph5:NGLess.NGError
                         active-0.2.0.14:Data.Active adjunctions-4.4:Data.Functor.Rep
                         aeson-1.4.6.0:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.3:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         bifunctors-5.5.6:Data.Bifunctor.Biff
                         bifunctors-5.5.6:Data.Bifunctor.Clown
                         bifunctors-5.5.6:Data.Bifunctor.Fix
                         bifunctors-5.5.6:Data.Bifunctor.Flip
                         bifunctors-5.5.6:Data.Bifunctor.Join
                         bifunctors-5.5.6:Data.Bifunctor.Joker
                         bifunctors-5.5.6:Data.Bifunctor.Product
                         bifunctors-5.5.6:Data.Bifunctor.Sum
                         bifunctors-5.5.6:Data.Bifunctor.Tannen
                         bifunctors-5.5.6:Data.Bifunctor.Wrapped bytes-0.15.5:Data.Bytes.Get
                         bytes-0.15.5:Data.Bytes.Signed bytes-0.15.5:Data.Bytes.VarInt
                         conduit-1.3.1.2:Data.Conduit.Internal.Conduit
                         conduit-1.3.1.2:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         diagrams-core-1.4.2:Diagrams.Core.Envelope
                         diagrams-core-1.4.2:Diagrams.Core.Measure
                         diagrams-core-1.4.2:Diagrams.Core.Names
                         diagrams-core-1.4.2:Diagrams.Core.Points
                         diagrams-core-1.4.2:Diagrams.Core.Query
                         diagrams-core-1.4.2:Diagrams.Core.Style
                         diagrams-core-1.4.2:Diagrams.Core.Trace
                         diagrams-core-1.4.2:Diagrams.Core.Transform
                         diagrams-core-1.4.2:Diagrams.Core.Types
                         diagrams-core-1.4.2:Diagrams.Core.V
                         diagrams-lib-1.4.3:Diagrams.Angle
                         diagrams-lib-1.4.3:Diagrams.Animation.Active
                         diagrams-lib-1.4.3:Diagrams.BoundingBox
                         diagrams-lib-1.4.3:Diagrams.Coordinates
                         diagrams-lib-1.4.3:Diagrams.Direction
                         diagrams-lib-1.4.3:Diagrams.Located
                         diagrams-lib-1.4.3:Diagrams.Path
                         diagrams-lib-1.4.3:Diagrams.Segment
                         diagrams-lib-1.4.3:Diagrams.Size
                         diagrams-lib-1.4.3:Diagrams.Tangent
                         diagrams-lib-1.4.3:Diagrams.ThreeD.Camera
                         diagrams-lib-1.4.3:Diagrams.ThreeD.Light
                         diagrams-lib-1.4.3:Diagrams.ThreeD.Shapes
                         diagrams-lib-1.4.3:Diagrams.ThreeD.Types
                         diagrams-lib-1.4.3:Diagrams.Trail
                         diagrams-lib-1.4.3:Diagrams.TwoD.Attributes
                         diagrams-lib-1.4.3:Diagrams.TwoD.Image
                         diagrams-lib-1.4.3:Diagrams.TwoD.Path
                         diagrams-lib-1.4.3:Diagrams.TwoD.Segment.Bernstein
                         diagrams-lib-1.4.3:Diagrams.TwoD.Text
                         diagrams-lib-1.4.3:Diagrams.TwoD.Types
                         diagrams-svg-1.4.3:Diagrams.Backend.SVG dlist-0.8.0.7:Data.DList
                         dual-tree-0.2.2.1:Data.Tree.DUAL.Internal
                         fingertree-0.1.4.2:Data.FingerTree
                         free-5.1.3:Control.Comonad.Cofree
                         free-5.1.3:Control.Comonad.Trans.Cofree
                         free-5.1.3:Control.Monad.Free free-5.1.3:Control.Monad.Trans.Free
                         ghc-boot-th-8.6.5:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.5:GHC.LanguageExtensions.Type
                         inline-c-0.7.0.1:Language.C.Inline
                         inline-c-0.7.0.1:Language.C.Inline.Context
                         intervals-0.8.1:Numeric.Interval.Kaucher
                         kan-extensions-5.2:Data.Functor.Day
                         kan-extensions-5.2:Data.Functor.Yoneda lens-4.17.1:Control.Lens.At
                         lens-4.17.1:Control.Lens.Internal.Indexed
                         lens-4.17.1:Control.Lens.Reified lens-4.17.1:Control.Lens.Tuple
                         lens-4.17.1:Control.Lens.Wrapped lens-4.17.1:Control.Lens.Zoom
                         linear-1.20.9:Linear.Affine linear-1.20.9:Linear.Plucker
                         linear-1.20.9:Linear.Quaternion linear-1.20.9:Linear.V
                         linear-1.20.9:Linear.V0 linear-1.20.9:Linear.V1
                         linear-1.20.9:Linear.V2 linear-1.20.9:Linear.V3
                         linear-1.20.9:Linear.V4
                         mono-traversable-1.0.15.1:Data.MonoTraversable
                         mono-traversable-1.0.15.1:Data.NonNull
                         mono-traversable-1.0.15.1:Data.Sequences
                         newtype-generics-0.5.4:Control.Newtype.Generics
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         profunctors-5.3:Data.Profunctor.Composition
                         profunctors-5.3:Data.Profunctor.Rep
                         regex-1.0.2.0:Text.RE.ZeInternals.NamedCaptures
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         stm-conduit-4.0.1:Data.Conduit.Async.Composition
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         th-abstraction-0.3.1.0:Language.Haskell.TH.Datatype
                         unliftio-0.2.12:UnliftIO.Internals.Async
                         unordered-containers-0.2.10.0:Data.HashMap.Base
                         unordered-containers-0.2.10.0:Data.HashSet.Base
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.3:Data.Vector vector-0.12.0.3:Data.Vector.Primitive
                         vector-0.12.0.3:Data.Vector.Storable
                         vector-0.12.0.3:Data.Vector.Unboxed
                         vector-0.12.0.3:Data.Vector.Unboxed.Base
                         zlib-0.6.2.1:Codec.Compression.Zlib.Stream
import  -/  MissingH-1.4.1.0:Data.List.Utils a5d3124a702dde141b1748ec65eff7c8
import  -/  MissingH-1.4.1.0:Data.String.Utils 3c6f5fb5c65d71601de716632d6af8e7
import  -/  Configuration 9a82cb30f48ec6255155f5c7391fb6c7
  exports: 9fc785b50aa90792bcf0bc8c48c96a09
  nConfSubsample b4545dc36df17a7adccb3e6be807ab85
import  -/  Data.FastQ 683044f508718e436592cbb72ea87fc2
  exports: 7f3c9451f8064311c68af66858502794
  FastQFilePath 3b49cd403d588d2f95c29b96eb9e4162
  FastQFilePath fdd414d88cf948fd1c738d4e396e4d35
  ReadSet c16a307192e6c5c3c5475f335c533ab2
  fqpathFilePath fdd414d88cf948fd1c738d4e396e4d35
  interleaveFQs c0fe872fc9bc8f8664ef5f5669491e0a
import  -/  FileManagement fb22fc32ebd4079eedfab3004822d35c
  exports: 0035e3f895add6fcbe2da0a7224ccae1
  BZ2Compression cdd1401120b1740afb404e40cd663bf0
  GzipCompression f74a6f19013ec6af18092d4d7f417e72
  NoCompression 942c226f2c26b8b5c2fb291215eefa65
  XZCompression 084f1408833b86b3b77f4907e69b7a5e
  ZStdCompression ec5249c7300c6ed6543d01446dd2c375
  inferCompression 28ae7bcd282005d2c18ed97510c9d25a
  makeNGLTempFile f8997243f49d682cc3f193c23e0f01b5
import  -/  FileOrStream 308bd6c9c43caa616b94f9fab478aee4
  exports: 0709a3ba970257fa0efa5dc4a795e2c1
  asFile 181f8e9ea69adf8f2201de21fd57b56e
  asStream 553d086343c35a73a4bd221b1dbb9899
import  -/  Language 93f0f50a5c7ee77231d71d6a98e7a8ca
  exports: 6aa5d24204c11e6b2a36767cd645b21f
  NGLessObject ea18243860934472078c5e2ccd0edf40
  NGOCounts 2f11e851e821c66c37fbdbe68821316f
  NGOFilename ef1dda6bd9bf8fe577c5213be3960679
  NGOList 488dd32aa90ff5894de15c18619c34df
  NGOMappedReadSet 919ef9db420f74c1cd3b0e0a5a7b4ad9
  NGOReadSet c3ec807d5d7afc041d47d76cd179ed0b
  NGOString 155e4815cffdc2c6617b34a2d52b7659
  NGOSymbol 8912a0dc0eeb07d7a07e311be194dbf1
  NGOVoid 3470f22180b45ca3e315b9326994ee3f
import  -/  NGLess a5aa819ac1d32c5f90c4109da4ddd56b
  exports: c338d02d81e70b5020d9e8bfbcb7ea8c
  KwArgsValues 830496506778855ea845b2c49d2ab17b
  decodeSymbolOrError 1fa33d0017c91baa13be4377853a0728
  lookupBoolOrScriptErrorDef ffe642effd69bd9a48ab477563baaa98
  lookupStringOrScriptError bc5829862d5b7f2576b249b0034f31cf
  stringOrTypeError 5b029483db59fc3cf043cd5fbc4379a1
  symbolOrTypeError ff6d0f8608f5840479e5de890e15f7b6
import  -/  NGLess.NGError 9175c652eec68d1a195f3eb2d7471cb5
  NGError 9741b2ef5fc8e673ccaf43057baf92e8
  NGLessIO f1fd902a0de985a61e8d9110730dfc21
  throwScriptError 96adea1584aa4db243e08c54da5ff3c3
  throwShouldNotOccur 6b0f4fcf8b2bcdc53931daab853fb839
import  -/  NGLess.NGLEnvironment 4ab4e397a1ac25f8e152520a0a756399
  exports: 140b883e1db9882b0aa097954c9eea1d
  nglConfiguration 539294010c83651951422c2571efcf9e
  nglEnvironment 56dd9663bd034f7047cca99f322e3b64
  ngleTemporaryFilesCreated d80a43c5bae03fd7eefc640474197c79
import  -/  Output 65dbbbf5895e64168b49be3b8326af6d
  exports: a41ff3401bfa3e00d33ddbc94a1eeb35
  AutoComment 190b2ed7a38d8eef3eec5eaf20733f37
  AutoDate 077f058f2d71c1270180c379c4f6eda6
  AutoResultHash d71b7ccea9160f2d4df1dfa5bd5022dc
  AutoScript d4fd8b4058635e7fadb2568c962d3bf3
  InfoOutput c7754f0807be19d61fb420c2d9984424
  WarningOutput bb4505448b44871ee533a71ef46281ca
  buildComment fb5b5336ed2bdfa2b553ba6be2c1d75f
  commentC 9b2e0f944de84ea76a04099daba7ccae
  outputListLno' 1a98fdc3c349e65a0f427ea401025c97
import  -/  Utils.Conduit 3529d55b10a7cbdf7250fd156212ef77
  exports: 899923d44363d2db775d0cbeb374b958
  ByteLine ac33b1a48ce77fc02979f39021c406e3
  ByteLine 981aa5298d35f0c0dbe1b9a7c5c38f9d
  byteLineSinkHandle 6f2a8561ae48069a20b7650aa09b45fc
  linesVC 5f60b94589835a466cc14354f9554195
import  -/  Utils.Samtools 738e9dc1149c2786f534e6cdcb86d6e5
  exports: 6b372d50d21c8eee4cc732fcfb5c3b7f
  convertBamToSam a4165d1254b7ad9e1b4fbfc6eff02b56
  convertSamToBam 25a0f3b5f0fb77c08815389e25981c59
import  -/  Utils.Utils 5a5b516d92cb4d06150e4c1e7f1bff1d
  exports: c13ae65e393f7bcdefbb619c4fc6a77b
  fmapMaybeM e3eabcea0ea26c7883f4bc280e31f2a9
  moveOrCopy f2756b201e4878d9b4dadba434aad3e1
import  -/  base-4.12.0.0:Control.Monad 07eaec7fd256019b318d048d00f45b1c
import  -/  base-4.12.0.0:Control.Monad.IO.Class e96805f9d79f75be66a0d44eb83064c1
import  -/  base-4.12.0.0:Data.Foldable efb37371da929e7bc88d896298d2d979
import  -/  base-4.12.0.0:Data.Functor 069b2025a03e32fd228e74a86a58a075
import  -/  base-4.12.0.0:Data.List 17d0c71c557e42abe196f130788fd997
import  -/  base-4.12.0.0:Data.Maybe 9b76a39e833465c3c5b3c078b431417f
import  -/  base-4.12.0.0:Data.OldList e931cf456dc87f11ee6e6fb153bca23e
import  -/  base-4.12.0.0:Data.Traversable d2c09bff1e4f0c871306c3ff8aa4dc36
import  -/  base-4.12.0.0:Data.Tuple c719fc29608fe81c10bee9a1bf1e05ff
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.IO 898d4ddbf00eb4732e5f462760aa42ae
import  -/  base-4.12.0.0:GHC.IO.Handle.FD 57dd508e0260edfe7dfb9592eb9a6e63
import  -/  base-4.12.0.0:GHC.IO.Handle.Types 8909e00409cd23d4e66395a7e93f216d
import  -/  base-4.12.0.0:GHC.List 4014a3c8a3b7c31c8325f6bcf1feea4a
import  -/  base-4.12.0.0:GHC.Num c2039f03637c68f47b0bbff4c18ec616
import  -/  base-4.12.0.0:GHC.Show 838a5d039379d82d9626aae53dfce276
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  base-4.12.0.0:System.IO dd4f3cfe73b94b7cae46a4ca98a3f09f
import  -/  bytestring-0.10.8.2:Data.ByteString.Char8 c4fe0102babc102f36c4516d04d0159e
import  -/  conduit-1.3.1.2:Data.Conduit a386d3988254720545738ed91850d867
import  -/  conduit-1.3.1.2:Data.Conduit.Combinators 347317c879e3debf6cbfb4f316e8bcb4
import  -/  conduit-1.3.1.2:Data.Conduit.Internal.Conduit 4cfa2d636f9204a4aa47382da9b0ff36
import  -/  conduit-1.3.1.2:Data.Conduit.List de08038b39705aaad9564275ec6efc45
import  -/  conduit-algorithms-0.0.11.0:Data.Conduit.Algorithms.Async c705e379633faccd5884d6a9e46c803e
import  -/  conduit-extra-1.3.4:Data.Conduit.Binary c81ebc9541e9b8e064aeb9f939263ed9
import  -/  directory-1.3.3.0:System.Directory 79b5722ff1e84b2378a22f8587a77df6
import  -/  exceptions-0.10.4:Control.Monad.Catch 85f48efbbcf90183fbe41164b686a061
import  -/  ghc-prim-0.5.3:GHC.Classes 0f6fd7d7db53fc48f6e1f01803cc6c9d
import  -/  mtl-2.2.2:Control.Monad.Error.Class 05ce857e0a8037d899cd3dba2eda1f68
import  -/  mtl-2.2.2:Control.Monad.Except 5ca04d82f027e75c6a16c1ed916c1305
import  -/  safeio-0.0.5.0:System.IO.SafeWrite d7756aa6dd46103e1e3f96abe2c18fe3
import  -/  text-1.2.3.1:Data.Text e31b81fb349ec0694c028af9d897c500
import  -/  text-1.2.3.1:Data.Text.Internal 537e168590e8068f673f691833f78483
import  -/  text-1.2.3.1:Data.Text.Show b788b7edd0f190b1a7c4f4aba0e35f18
import  -/  unliftio-core-0.1.2.0:Control.Monad.IO.Unlift f8f4d10cc7b67433826b7a5b824acd4c
import  -/  vector-0.12.0.3:Data.Vector c2b750be0d99dbce28ebfe75464ea17e
addDependentFile "/home/sajjal/.stack/programs/x86_64-linux/ghc-8.6.5/lib/ghc-8.6.5/include/ghcversion.h" 43db44f9bb88490c2fa995e5f5ec33f2
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-2.4.0.1/build/autogen/cabal_macros.h" e3731cb12b83b9e47defd67255252b42
addDependentFile "/usr/include/stdc-predef.h" 64086a4476ea583071277345b423d741
c481154aadb9f77cfed1044f9e51b368
  $fEqWriteOptions ::
    GHC.Classes.Eq Interpretation.Write.WriteOptions
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Interpretation.Write.WriteOptions
                  Interpretation.Write.$fEqWriteOptions_$c==
                  Interpretation.Write.$fEqWriteOptions_$c/= -}
c481154aadb9f77cfed1044f9e51b368
  $fEqWriteOptions_$c/= ::
    Interpretation.Write.WriteOptions
    -> Interpretation.Write.WriteOptions -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U))><S(SLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U))>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Interpretation.Write.WriteOptions)
                   (y :: Interpretation.Write.WriteOptions) ->
                 case Interpretation.Write.$fEqWriteOptions_$c== x y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
c481154aadb9f77cfed1044f9e51b368
  $fEqWriteOptions_$c== ::
    Interpretation.Write.WriteOptions
    -> Interpretation.Write.WriteOptions -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U))><S(SLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U(U,U,U))> -}
4c4ed3839cdca174e6e826c07746b16c
  $s$fApplicativeResourceT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Interpretation.Write.$s$fApplicativeResourceT_$s$fFunctorResourceT
                  (\ @ a (eta :: a) ->
                   let {
                     x :: GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 1 -}
                     = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                   } in
                   (\ (ds :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <a>_R)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                      <GHC.Types.IO>_R <a>_N)))
                  (\ @ a
                     @ b
                     (ds :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO (a -> b))
                     (ds1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a -> b>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a -> b>_R)
                          s of ds2 { (#,#) ipv ipv1 ->
                   case (ds1
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          ipv of ds3 { (#,#) ipv2 ipv3 ->
                   (# ipv2, ipv1 ipv3 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT
                      GHC.Types.IO (a -> b)>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO a>_R
                   ->_R (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <b>_R)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                          <GHC.Types.IO>_R <b>_N))
                  (Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT2
                     @ GHC.Types.IO
                     GHC.Base.$fApplicativeIO)
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N).
                   <a -> b -> c>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO a>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO b>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <GHC.Types.IO>_R <c>_N))
                  (Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT3
                     @ GHC.Types.IO
                     GHC.Base.$fApplicativeIO)
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO b>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <GHC.Types.IO>_R <b>_N))
                  (\ @ a @ b ->
                   Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT2
                     @ GHC.Types.IO
                     GHC.Base.$fApplicativeIO
                     @ a
                     @ b
                     @ a
                     (GHC.Base.const @ a @ b))
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO b>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <GHC.Types.IO>_R <a>_N)) -}
4a4e13b7d7d51bc17458cacb95837154
  $s$fApplicativeResourceT1 ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       NGLess.NGError.NGLessIO)
                  Interpretation.Write.$s$fApplicativeResourceT_$s$fFunctorResourceT1
                  (\ @ a (eta :: a) ->
                   let {
                     x :: GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap
                          -> GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 2 -}
                     = \ (eta1 :: GHC.IORef.IORef
                                    Control.Monad.Trans.Resource.Internal.ReleaseMap)
                         (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       (# eta2, eta #)
                   } in
                   (\ (ds :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R (<GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <a>_R)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                             <GHC.Types.IO>_R
                                                             <a>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <a>_N)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                                                            <NGLess.NGError.NGLessIO>_R
                                                                                                                            <a>_N)))
                  (\ @ a
                     @ b
                     (ds :: Control.Monad.Trans.Resource.Internal.ResourceT
                              NGLess.NGError.NGLessIO (a -> b))
                     (ds1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               NGLess.NGError.NGLessIO a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   let {
                     ds2 :: NGLess.NGError.NGLessIO (a -> b)
                     = ds
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <NGLess.NGError.NGLessIO>_R <a -> b>_N)
                         r
                   } in
                   let {
                     ds3 :: NGLess.NGError.NGLessIO a
                     = ds1
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <NGLess.NGError.NGLessIO>_R <a>_N)
                         r
                   } in
                   (\ (r1 :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap)
                      (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                    case (ds2
                            `cast`
                          (NGLess.NGError.N:NGLessIO[0] <a
                                                         -> b>_N ; Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                       <GHC.Types.IO>_R <a -> b>_N)
                            r1)
                           `cast`
                         (GHC.Types.N:IO[0] <a -> b>_R)
                           s of ds4 { (#,#) ipv ipv1 ->
                    case (ds3
                            `cast`
                          (NGLess.NGError.N:NGLessIO[0] <a>_N ; Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                    <GHC.Types.IO>_R <a>_N)
                            r1)
                           `cast`
                         (GHC.Types.N:IO[0] <a>_R)
                           ipv of ds5 { (#,#) ipv2 ipv3 ->
                    (# ipv2, ipv1 ipv3 #) } })
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <b>_R)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                       <GHC.Types.IO>_R
                                                       <b>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <b>_N)))
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT
                      NGLess.NGError.NGLessIO (a -> b)>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           NGLess.NGError.NGLessIO a>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <NGLess.NGError.NGLessIO>_R <b>_N))
                  (Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT2
                     @ NGLess.NGError.NGLessIO
                     NGLess.NGError.$fApplicativeNGLessIO)
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N).
                   <a -> b -> c>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           NGLess.NGError.NGLessIO a>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           NGLess.NGError.NGLessIO b>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <NGLess.NGError.NGLessIO>_R <c>_N))
                  (Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT3
                     @ NGLess.NGError.NGLessIO
                     NGLess.NGError.$fApplicativeNGLessIO)
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT
                      NGLess.NGError.NGLessIO a>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           NGLess.NGError.NGLessIO b>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <NGLess.NGError.NGLessIO>_R <b>_N))
                  (\ @ a @ b ->
                   Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT2
                     @ NGLess.NGError.NGLessIO
                     NGLess.NGError.$fApplicativeNGLessIO
                     @ a
                     @ b
                     @ a
                     (GHC.Base.const @ a @ b))
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT
                      NGLess.NGError.NGLessIO a>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           NGLess.NGError.NGLessIO b>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <NGLess.NGError.NGLessIO>_R <a>_N)) -}
be1fbaf411f3e1208043cadd70bc2819
  $s$fApplicativeResourceT_$s$fFunctorResourceT ::
    GHC.Base.Functor
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  (\ @ a
                     @ b
                     (f :: a -> b)
                     (ds :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds1 { (#,#) ipv ipv1 ->
                   (# ipv, f ipv1 #) })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <a -> b>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO a>_R
                   ->_R (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <b>_R)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                          <GHC.Types.IO>_R <b>_N))
                  (\ @ a
                     @ b
                     (x :: a)
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO b)
                     (eta1 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <b>_N)
                           eta1)
                          `cast`
                        (GHC.Types.N:IO[0] <b>_R)
                          s of ds { (#,#) ipv ipv1 ->
                   (# ipv, x #) })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <a>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO b>_R
                   ->_R (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <a>_R)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                          <GHC.Types.IO>_R <a>_N)) -}
432ac3ca2cfab8d227ba5135629ac5f3
  $s$fApplicativeResourceT_$s$fFunctorResourceT1 ::
    GHC.Base.Functor
      (Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       NGLess.NGError.NGLessIO)
                  (\ @ a
                     @ b
                     (f :: a -> b)
                     (ds :: Control.Monad.Trans.Resource.Internal.ResourceT
                              NGLess.NGError.NGLessIO a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   let {
                     ds1 :: NGLess.NGError.NGLessIO a
                     = ds
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <NGLess.NGError.NGLessIO>_R <a>_N)
                         r
                   } in
                   (\ (r1 :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap)
                      (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                    case (ds1
                            `cast`
                          (NGLess.NGError.N:NGLessIO[0] <a>_N ; Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                    <GHC.Types.IO>_R <a>_N)
                            r1)
                           `cast`
                         (GHC.Types.N:IO[0] <a>_R)
                           s of ds2 { (#,#) ipv ipv1 ->
                    (# ipv, f ipv1 #) })
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <b>_R)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                       <GHC.Types.IO>_R
                                                       <b>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <b>_N)))
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <a -> b>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           NGLess.NGError.NGLessIO a>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <NGLess.NGError.NGLessIO>_R <b>_N))
                  (\ @ a
                     @ b
                     (x :: a)
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               NGLess.NGError.NGLessIO b)
                     (eta1 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   let {
                     ds :: NGLess.NGError.NGLessIO b
                     = eta
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <NGLess.NGError.NGLessIO>_R <b>_N)
                         eta1
                   } in
                   (\ (r :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap)
                      (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                    case (ds
                            `cast`
                          (NGLess.NGError.N:NGLessIO[0] <b>_N ; Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                    <GHC.Types.IO>_R <b>_N)
                            r)
                           `cast`
                         (GHC.Types.N:IO[0] <b>_R)
                           s of ds1 { (#,#) ipv ipv1 ->
                    (# ipv, x #) })
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <a>_R)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                       <GHC.Types.IO>_R
                                                       <a>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <a>_N)))
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <a>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           NGLess.NGError.NGLessIO b>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <NGLess.NGError.NGLessIO>_R <a>_N)) -}
b5bab0aae107e9c090f1d36f2ef490ef
  $s$fMonadErroreResourceT ::
    Control.Monad.Error.Class.MonadError
      NGLess.NGError.NGError
      (Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ NGLess.NGError.NGError
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       NGLess.NGError.NGLessIO)
                  Interpretation.Write.$s$fMonadErroreResourceT_$s$fMonadResourceT
                  (\ @ a (eta :: NGLess.NGError.NGError) ->
                   let {
                     x :: GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap
                          -> GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 2, Strictness: <L,U><L,U>x -}
                     = NGLess.NGError.$fMonadErrorNGErrorNGLessIO1 @ a eta
                   } in
                   (\ (ds :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R (<GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <a>_R)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                             <GHC.Types.IO>_R
                                                             <a>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <a>_N)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                                                            <NGLess.NGError.NGLessIO>_R
                                                                                                                            <a>_N)))
                  (\ @ a
                     (r :: Control.Monad.Trans.Resource.Internal.ResourceT
                             NGLess.NGError.NGLessIO a)
                     (h :: NGLess.NGError.NGError
                           -> Control.Monad.Trans.Resource.Internal.ResourceT
                                NGLess.NGError.NGLessIO a)
                     (i :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   case NGLess.NGError.$fMonadErrorNGErrorNGLessIO_$ccatchError
                   ret_ty (NGLess.NGError.NGLessIO a)
                   of {})
                    `cast`
                  (forall (a :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT
                      NGLess.NGError.NGLessIO a>_R
                   ->_R <NGLess.NGError.NGError
                         -> Control.Monad.Trans.Resource.Internal.ResourceT
                              NGLess.NGError.NGLessIO a>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <NGLess.NGError.NGLessIO>_R <a>_N)) -}
4100fef23b6128f8e8dae0fbb2b5e703
  $s$fMonadErroreResourceT1 ::
    Control.Monad.Trans.Resource.Internal.ResourceT
      NGLess.NGError.NGLessIO a
    -> (NGLess.NGError.NGError
        -> Control.Monad.Trans.Resource.Internal.ResourceT
             NGLess.NGError.NGLessIO a)
    -> GHC.IORef.IORef Control.Monad.Trans.Resource.Internal.ReleaseMap
    -> NGLess.NGError.NGLessIO a
  {- Arity: 3, Strictness: <B,A><B,A><B,A>b,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (r :: Control.Monad.Trans.Resource.Internal.ResourceT
                           NGLess.NGError.NGLessIO a)
                   (h :: NGLess.NGError.NGError
                         -> Control.Monad.Trans.Resource.Internal.ResourceT
                              NGLess.NGError.NGLessIO a)
                   (i :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                 case NGLess.NGError.$fMonadErrorNGErrorNGLessIO_$ccatchError
                 ret_ty (NGLess.NGError.NGLessIO a)
                 of {}) -}
f681cea7eca8122eb048ea5083324936
  $s$fMonadErroreResourceT_$cthrowError ::
    NGLess.NGError.NGError
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO a
  {- Arity: 4, Strictness: <B,U><B,A><B,A><B,U>x,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (eta :: NGLess.NGError.NGError) ->
                 let {
                   x :: GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap
                        -> GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                     {- Arity: 2, Strictness: <L,U><L,U>x -}
                   = NGLess.NGError.$fMonadErrorNGErrorNGLessIO1 @ a eta
                 } in
                 (\ (ds :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  x)
                   `cast`
                 ((<GHC.IORef.IORef
                      Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                   ->_R (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <a>_R)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                           <GHC.Types.IO>_R
                                                           <a>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <a>_N)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                                                          <NGLess.NGError.NGLessIO>_R
                                                                                                                          <a>_N))) -}
485c226a5728fcff95594af7c126273b
  $s$fMonadErroreResourceT_$s$fMonadResourceT ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       NGLess.NGError.NGLessIO)
                  Interpretation.Write.$s$fApplicativeResourceT1
                  (\ @ a
                     @ b
                     (ds :: Control.Monad.Trans.Resource.Internal.ResourceT
                              NGLess.NGError.NGLessIO a)
                     (f :: a
                           -> Control.Monad.Trans.Resource.Internal.ResourceT
                                NGLess.NGError.NGLessIO b)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   let {
                     ds1 :: NGLess.NGError.NGLessIO a
                     = ds
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <NGLess.NGError.NGLessIO>_R <a>_N)
                         r
                   } in
                   (\ (r1 :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap)
                      (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                    case (ds1
                            `cast`
                          (NGLess.NGError.N:NGLessIO[0] <a>_N ; Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                    <GHC.Types.IO>_R <a>_N)
                            r1)
                           `cast`
                         (GHC.Types.N:IO[0] <a>_R)
                           s of ds2 { (#,#) ipv ipv1 ->
                    (((f ipv1)
                        `cast`
                      (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                           <NGLess.NGError.NGLessIO>_R <b>_N)
                        r)
                       `cast`
                     (NGLess.NGError.N:NGLessIO[0] <b>_N ; Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                               <GHC.Types.IO>_R <b>_N)
                       r1)
                      `cast`
                    (GHC.Types.N:IO[0] <b>_R)
                      ipv })
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <b>_R)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                       <GHC.Types.IO>_R
                                                       <b>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <b>_N)))
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT
                      NGLess.NGError.NGLessIO a>_R
                   ->_R <a
                         -> Control.Monad.Trans.Resource.Internal.ResourceT
                              NGLess.NGError.NGLessIO b>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <NGLess.NGError.NGLessIO>_R <b>_N))
                  Interpretation.Write.$s$fMonadErroreResourceT_$s$fMonadResourceT_$c>>
                  (\ @ a (eta :: a) ->
                   let {
                     x :: GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap
                          -> GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 2 -}
                     = \ (eta1 :: GHC.IORef.IORef
                                    Control.Monad.Trans.Resource.Internal.ReleaseMap)
                         (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       (# eta2, eta #)
                   } in
                   (\ (ds :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R (<GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <a>_R)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                             <GHC.Types.IO>_R
                                                             <a>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <a>_N)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                                                            <NGLess.NGError.NGLessIO>_R
                                                                                                                            <a>_N)))
                  (\ @ a ->
                   GHC.Err.errorWithoutStackTrace
                     @ 'GHC.Types.LiftedRep
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT
                          NGLess.NGError.NGLessIO a)) -}
0a1d5c8233df8d16b734f9343f968ce7
  $s$fMonadErroreResourceT_$s$fMonadResourceT_$c>> ::
    Control.Monad.Trans.Resource.Internal.ResourceT
      NGLess.NGError.NGLessIO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO b
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*C1(C(C1(U(U,A))))><L,C(C1(C1(U)))><L,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ a
                   @ b
                   (m1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                            NGLess.NGError.NGLessIO a)
                   (k :: Control.Monad.Trans.Resource.Internal.ResourceT
                           NGLess.NGError.NGLessIO b)
                   (r :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                 let {
                   ds :: NGLess.NGError.NGLessIO a
                   = m1
                       `cast`
                     (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                          <NGLess.NGError.NGLessIO>_R <a>_N)
                       r
                 } in
                 (\ (r1 :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  case (ds
                          `cast`
                        (NGLess.NGError.N:NGLessIO[0] <a>_N ; Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                  <GHC.Types.IO>_R <a>_N)
                          r1)
                         `cast`
                       (GHC.Types.N:IO[0] <a>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  ((k `cast`
                    (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                         <NGLess.NGError.NGLessIO>_R <b>_N)
                      r)
                     `cast`
                   (NGLess.NGError.N:NGLessIO[0] <b>_N ; Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                             <GHC.Types.IO>_R <b>_N)
                     r1)
                    `cast`
                  (GHC.Types.N:IO[0] <b>_R)
                    ipv })
                   `cast`
                 ((<GHC.IORef.IORef
                      Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <b>_R)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                     <GHC.Types.IO>_R
                                                     <b>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <b>_N)))
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 <Control.Monad.Trans.Resource.Internal.ResourceT
                    NGLess.NGError.NGLessIO a>_R
                 ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                         NGLess.NGError.NGLessIO b>_R
                 ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                               <NGLess.NGError.NGLessIO>_R <b>_N)) -}
a8aff38f9662aa80f552855a19261b6e
  $s$fMonadIOResourceT ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Interpretation.Write.$s$fMonadIOResourceT_$s$fMonadResourceT
                  (\ @ a
                     (eta :: GHC.Types.IO a)
                     (ds :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   eta)
                    `cast`
                  (forall (a :: <*>_N).
                   <GHC.Types.IO a>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <GHC.Types.IO>_R <a>_N)) -}
ac76b0cf0cac8cebad383c3f2c60f9fa
  $s$fMonadIOResourceT1 ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       NGLess.NGError.NGLessIO)
                  Interpretation.Write.$s$fMonadErroreResourceT_$s$fMonadResourceT
                  (\ @ a (eta :: GHC.Types.IO a) ->
                   let {
                     x :: GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap
                          -> GHC.Types.IO a
                       {- Arity: 1 -}
                     = \ (ds :: GHC.IORef.IORef
                                  Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                       eta
                   } in
                   (\ (ds :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                   <GHC.Types.IO>_R
                                   <a>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <a>_N) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                                 <NGLess.NGError.NGLessIO>_R
                                                                                                 <a>_N))) -}
37467b4406d52145fdf34f08fdc2e114
  $s$fMonadIOResourceT_$cliftIO ::
    GHC.Types.IO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   (eta :: GHC.Types.IO a)
                   (ds :: GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                 eta)
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Types.IO a>_R
                 ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                               <GHC.Types.IO>_R <a>_N)) -}
10285ac0c754add9e3980bc98390a0be
  $s$fMonadIOResourceT_$cliftIO1 ::
    GHC.Types.IO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO a
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,A><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (eta :: GHC.Types.IO a) ->
                 let {
                   x :: GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap
                        -> GHC.Types.IO a
                     {- Arity: 1 -}
                   = \ (ds :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                     eta
                 } in
                 (\ (ds :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  x)
                   `cast`
                 ((<GHC.IORef.IORef
                      Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <GHC.Types.IO>_R
                                 <a>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <a>_N) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                               <NGLess.NGError.NGLessIO>_R
                                                                                               <a>_N))) -}
4b6741343dc362a822906c659aef700f
  $s$fMonadIOResourceT_$s$fMonadResourceT ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Interpretation.Write.$s$fApplicativeResourceT
                  (\ @ a
                     @ b
                     (ds :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO a)
                     (f :: a
                           -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds1 { (#,#) ipv ipv1 ->
                   ((f ipv1)
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                         <GHC.Types.IO>_R <b>_N)
                      r)
                     `cast`
                   (GHC.Types.N:IO[0] <b>_R)
                     ipv })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                   ->_R <a
                         -> Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO b>_R
                   ->_R (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <b>_R)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                          <GHC.Types.IO>_R <b>_N))
                  Interpretation.Write.$s$fMonadIOResourceT_$s$fMonadResourceT_$c>>
                  (\ @ a (eta :: a) ->
                   let {
                     x :: GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 1 -}
                     = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                   } in
                   (\ (ds :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <a>_R)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                      <GHC.Types.IO>_R <a>_N)))
                  (\ @ a ->
                   GHC.Err.errorWithoutStackTrace
                     @ 'GHC.Types.LiftedRep
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT
                          GHC.Types.IO a)) -}
97005a0835e937fc1e50de95a659c22a
  $s$fMonadIOResourceT_$s$fMonadResourceT_$c>> ::
    Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S(SL))),1*C1(C1(U(U,A)))><L,1*C1(C1(U(U,U)))><L,U><S,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ a
                   @ b
                   (m1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                            GHC.Types.IO a)
                   (k :: Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO b)
                   (r :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (m1
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <GHC.Types.IO>_R <a>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <a>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 (k `cast`
                  (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                       <GHC.Types.IO>_R <b>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <b>_R)
                   ipv })
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                 ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                         GHC.Types.IO b>_R
                 ->_R (<GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <b>_R)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                        <GHC.Types.IO>_R <b>_N)) -}
dadfb661d11e2bfa39de803eecf32b53
  $s$fMonadResourceResourceT ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       NGLess.NGError.NGLessIO)
                  Interpretation.Write.$s$fMonadIOResourceT1
                  (\ @ a
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (eta1 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   let {
                     eta2 :: GHC.Types.IO a
                     = eta
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <GHC.Types.IO>_R <a>_N)
                         eta1
                   } in
                   (\ (ds :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    eta2)
                     `cast`
                   (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                             <GHC.Types.IO>_R
                             <a>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <a>_N))
                    `cast`
                  (forall (a :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <NGLess.NGError.NGLessIO>_R <a>_N)) -}
0c2c2100569549aaaf7df5b9cc5e5e63
  $s$fMonadResourceResourceT1 ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Interpretation.Write.$s$fMonadIOResourceT
                  (\ @ a
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (eta1 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   eta
                     `cast`
                   (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                        <GHC.Types.IO>_R <a>_N)
                     eta1)
                    `cast`
                  (forall (a :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <GHC.Types.IO>_R <a>_N)) -}
f74091617c5abb84761855ea1a292edc
  $s$fMonadResourceResourceT3 ::
    Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
    -> GHC.IORef.IORef Control.Monad.Trans.Resource.Internal.ReleaseMap
    -> GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U)><L,U>,
     Unfolding: InlineRule (2, True, True)
                (\ @ a
                   (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                             GHC.Types.IO a)
                   (eta1 :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                 eta
                   `cast`
                 (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                      <GHC.Types.IO>_R <a>_N)
                   eta1) -}
163731aad27ecdf027c272cbdbbacd04
  $s$fMonadResourceT_$creturn ::
    a -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (eta :: a) ->
                 let {
                   x :: GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                     {- Arity: 1 -}
                   = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                 } in
                 (\ (ds :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  x)
                   `cast`
                 ((<GHC.IORef.IORef
                      Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <a>_R)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                    <GHC.Types.IO>_R <a>_N))) -}
53605f116e99ad7f318797675b8cb3f0
  $s$fMonadResourceT_$creturn1 ::
    a
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO a
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,A><L,A><S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (eta :: a) ->
                 let {
                   x :: GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap
                        -> GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                     {- Arity: 2 -}
                   = \ (eta1 :: GHC.IORef.IORef
                                  Control.Monad.Trans.Resource.Internal.ReleaseMap)
                       (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                     (# eta2, eta #)
                 } in
                 (\ (ds :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  x)
                   `cast`
                 ((<GHC.IORef.IORef
                      Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                   ->_R (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <a>_R)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                           <GHC.Types.IO>_R
                                                           <a>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <a>_N)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                                                          <NGLess.NGError.NGLessIO>_R
                                                                                                                          <a>_N))) -}
ddaf3799972cc84cf63dc532e18ac94b
  $s$fMonadThrowResourceT ::
    Control.Monad.Catch.MonadThrow
      (Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       NGLess.NGError.NGLessIO)
                  Interpretation.Write.$s$fMonadErroreResourceT_$s$fMonadResourceT
                  (\ @ e @ a (eta :: GHC.Exception.Type.Exception e) (x :: e) ->
                   let {
                     x1 :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 2, Strictness: <L,U><L,U>x -}
                     = \ (eta1 :: GHC.IORef.IORef
                                    Control.Monad.Trans.Resource.Internal.ReleaseMap)
                         (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       GHC.IO.throwIO1 @ e @ a eta x eta2
                   } in
                   (\ (ds :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x1)
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R (<GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <a>_R)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                             <GHC.Types.IO>_R
                                                             <a>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <a>_N)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                                                            <NGLess.NGError.NGLessIO>_R
                                                                                                                            <a>_N))) -}
6c5b3a2dd2047f9babf7ce8419741271
  $s$fMonadThrowResourceT1 ::
    Control.Monad.Catch.MonadThrow
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Interpretation.Write.$s$fMonadIOResourceT_$s$fMonadResourceT
                  (\ @ e @ a (eta :: GHC.Exception.Type.Exception e) (x :: e) ->
                   let {
                     x1 :: GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 1, Strictness: <L,U>x -}
                     = GHC.IO.throwIO1 @ e @ a eta x
                   } in
                   (\ (ds :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x1)
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <a>_R)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                      <GHC.Types.IO>_R <a>_N))) -}
25e95d09fdea7fc1cc140ad3205a3dfb
  $s$fMonadThrowResourceT_$cthrowM ::
    GHC.Exception.Type.Exception e =>
    e
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <B,1*U(A,A,1*C1(U),A,A)><B,U><B,A><B,A><B,U>x,
     Unfolding: InlineRule (1, True, False)
                (\ @ e @ a (eta :: GHC.Exception.Type.Exception e) (x :: e) ->
                 let {
                   x1 :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap
                         -> GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                     {- Arity: 2, Strictness: <L,U><L,U>x -}
                   = \ (eta1 :: GHC.IORef.IORef
                                  Control.Monad.Trans.Resource.Internal.ReleaseMap)
                       (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                     GHC.IO.throwIO1 @ e @ a eta x eta2
                 } in
                 (\ (ds :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  x1)
                   `cast`
                 ((<GHC.IORef.IORef
                      Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                   ->_R (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <a>_R)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                           <GHC.Types.IO>_R
                                                           <a>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <a>_N)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                                                          <NGLess.NGError.NGLessIO>_R
                                                                                                                          <a>_N))) -}
c94478ef6581a46d15587e485b642776
  $s$fMonadThrowResourceT_$cthrowM1 ::
    GHC.Exception.Type.Exception e =>
    e -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <B,1*U(A,A,1*C1(U),A,A)><B,U><B,A><B,U>x,
     Unfolding: InlineRule (1, True, False)
                (\ @ e @ a (eta :: GHC.Exception.Type.Exception e) (x :: e) ->
                 let {
                   x1 :: GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                     {- Arity: 1, Strictness: <L,U>x -}
                   = GHC.IO.throwIO1 @ e @ a eta x
                 } in
                 (\ (ds :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  x1)
                   `cast`
                 ((<GHC.IORef.IORef
                      Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <a>_R)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                    <GHC.Types.IO>_R <a>_N))) -}
94ea4d6f1ea3f0954e770e9891f778d3
  $s$fMonadUnliftIOResourceT ::
    Control.Monad.IO.Unlift.MonadUnliftIO
      (Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       NGLess.NGError.NGLessIO)
                  Interpretation.Write.$s$fMonadIOResourceT1
                  (Control.Monad.Trans.Resource.Internal.$fMonadUnliftIOResourceT1
                     @ NGLess.NGError.NGLessIO
                     NGLess.NGError.$fMonadUnliftIONGLessIO)
                    `cast`
                  (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <NGLess.NGError.NGLessIO>_R
                            <Control.Monad.IO.Unlift.UnliftIO
                               (Control.Monad.Trans.Resource.Internal.ResourceT
                                  NGLess.NGError.NGLessIO)>_N))
                  Interpretation.Write.$s$fMonadUnliftIOResourceT_$s$fMonadUnliftIOResourceT_$cwithRunInIO -}
d7d23f537b698501a79efe2ab190decc
  $s$fMonadUnliftIOResourceT1 ::
    Control.Monad.IO.Unlift.MonadUnliftIO
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Interpretation.Write.$s$fMonadIOResourceT
                  (Control.Monad.Trans.Resource.Internal.$fMonadUnliftIOResourceT1
                     @ GHC.Types.IO
                     Control.Monad.IO.Unlift.$fMonadUnliftIOIO)
                    `cast`
                  (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <GHC.Types.IO>_R
                            <Control.Monad.IO.Unlift.UnliftIO
                               (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)>_N))
                  Interpretation.Write.$s$fMonadUnliftIOResourceT_$s$fMonadUnliftIOResourceT_$cwithRunInIO1 -}
8035f347bbca30b5a8383ecb0f50b6de
  $s$fMonadUnliftIOResourceT_$s$fMonadUnliftIOResourceT_$cwithRunInIO ::
    ((forall a.
      Control.Monad.Trans.Resource.Internal.ResourceT
        NGLess.NGError.NGLessIO a
      -> GHC.Types.IO a)
     -> GHC.Types.IO b)
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S)),1*C1(C1(U(U,U)))><L,U><L,U><S,U>,
     Inline: (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ b
                   (ds :: (forall a.
                           Control.Monad.Trans.Resource.Internal.ResourceT
                             NGLess.NGError.NGLessIO a
                           -> GHC.Types.IO a)
                          -> GHC.Types.IO b)
                   (r :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                 let {
                   ds1 :: NGLess.NGError.NGLessIO
                            (Control.Monad.IO.Unlift.UnliftIO
                               (Control.Monad.Trans.Resource.Internal.ResourceT
                                  NGLess.NGError.NGLessIO))
                   = Control.Monad.Trans.Resource.Internal.$fMonadUnliftIOResourceT1
                       @ NGLess.NGError.NGLessIO
                       NGLess.NGError.$fMonadUnliftIONGLessIO
                       r
                 } in
                 (\ (r1 :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  case (ds1
                          `cast`
                        (NGLess.NGError.N:NGLessIO[0] <Control.Monad.IO.Unlift.UnliftIO
                                                         (Control.Monad.Trans.Resource.Internal.ResourceT
                                                            NGLess.NGError.NGLessIO)>_N ; Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                              <GHC.Types.IO>_R
                                                                                              <Control.Monad.IO.Unlift.UnliftIO
                                                                                                 (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                                    NGLess.NGError.NGLessIO)>_N)
                          r1)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <Control.Monad.IO.Unlift.UnliftIO
                               (Control.Monad.Trans.Resource.Internal.ResourceT
                                  NGLess.NGError.NGLessIO)>_R)
                         s of ds2 { (#,#) ipv ipv1 ->
                  (ds
                     ipv1
                       `cast`
                     (Control.Monad.IO.Unlift.N:UnliftIO[0]
                          <Control.Monad.Trans.Resource.Internal.ResourceT
                             NGLess.NGError.NGLessIO>_R))
                    `cast`
                  (GHC.Types.N:IO[0] <b>_R)
                    ipv })
                   `cast`
                 ((<GHC.IORef.IORef
                      Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <b>_R)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                     <GHC.Types.IO>_R
                                                     <b>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <b>_N)))
                  `cast`
                (forall (b :: <*>_N).
                 <(forall a.
                   Control.Monad.Trans.Resource.Internal.ResourceT
                     NGLess.NGError.NGLessIO a
                   -> GHC.Types.IO a)
                  -> GHC.Types.IO b>_R
                 ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                               <NGLess.NGError.NGLessIO>_R <b>_N)) -}
e4d1c209c824eb5546495a410f4ac650
  $s$fMonadUnliftIOResourceT_$s$fMonadUnliftIOResourceT_$cwithRunInIO1 ::
    ((forall a.
      Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
      -> GHC.Types.IO a)
     -> GHC.Types.IO b)
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(C(S)),1*C1(C1(U(U,U)))><L,U><S,U>,
     Inline: (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ b
                   (ds :: (forall a.
                           Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
                           -> GHC.Types.IO a)
                          -> GHC.Types.IO b)
                   (r :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (Control.Monad.Trans.Resource.Internal.$fMonadUnliftIOResourceT1
                         @ GHC.Types.IO
                         Control.Monad.IO.Unlift.$fMonadUnliftIOIO
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <Control.Monad.IO.Unlift.UnliftIO
                              (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 (ds
                    ipv1
                      `cast`
                    (Control.Monad.IO.Unlift.N:UnliftIO[0]
                         <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R))
                   `cast`
                 (GHC.Types.N:IO[0] <b>_R)
                   ipv })
                  `cast`
                (forall (b :: <*>_N).
                 <(forall a.
                   Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
                   -> GHC.Types.IO a)
                  -> GHC.Types.IO b>_R
                 ->_R (<GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <b>_R)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                        <GHC.Types.IO>_R <b>_N)) -}
4058735189009ef1964a65474fdb5991
  $tc'WriteOptions :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16341198222472413059##
                   13487059748093680166##
                   Interpretation.Write.$trModule
                   Interpretation.Write.$tc'WriteOptions2
                   0#
                   Interpretation.Write.$tc'WriteOptions1) -}
3ea07bb6a32ccc5146aff03ed2605d81
  $tc'WriteOptions1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
d29e77efc97f3e4df0fa4fb91fb0e00f
  $tc'WriteOptions2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Interpretation.Write.$tc'WriteOptions3) -}
2dea11a5efccffb130a83433f10a945e
  $tc'WriteOptions3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'WriteOptions"#) -}
681333d18b41ccdfab2f3c6f181218d7
  $tcWriteOptions :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17040410394490672880##
                   16679306902474851139##
                   Interpretation.Write.$trModule
                   Interpretation.Write.$tcWriteOptions1
                   0#
                   GHC.Types.krep$*) -}
104e6426eca2d91967fb9182fb0d30a5
  $tcWriteOptions1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Interpretation.Write.$tcWriteOptions2) -}
96bbba3d8aa5a8ffd62e71f462a560bb
  $tcWriteOptions2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("WriteOptions"#) -}
fa76bf20d46a021f769dee6c905e9242
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Interpretation.Write.$trModule3
                   Interpretation.Write.$trModule1) -}
3e868ec4feb9c46e3a7a5dc619385e8a
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Interpretation.Write.$trModule2) -}
5ddc4d9628c46d05ac3607ec4769a573
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Interpretation.Write"#) -}
8e8aaf92ace05f7488ae9b9c87663323
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Interpretation.Write.$trModule4) -}
d5a195c9f0525ccad12bab04c6be42ab
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("NGLess-1.1.0-965Np14lOUvJ2rS9XGhph5"#) -}
c481154aadb9f77cfed1044f9e51b368
  data WriteOptions
    = WriteOptions {woOFile :: GHC.IO.FilePath,
                    woFormat :: GHC.Maybe.Maybe Data.Text.Internal.Text,
                    woFormatFlags :: GHC.Maybe.Maybe Data.Text.Internal.Text,
                    woCanMove :: GHC.Types.Bool,
                    woVerbose :: GHC.Types.Bool,
                    woComment :: GHC.Maybe.Maybe Data.Text.Internal.Text,
                    woAutoComment :: [Output.AutoComment],
                    woHash :: Data.Text.Internal.Text}
e3b1f974dea8f6db9774ff989b21279b
  executeWrite ::
    Language.NGLessObject
    -> [(Data.Text.Internal.Text, Language.NGLessObject)]
    -> NGLess.NGError.NGLessIO Language.NGLessObject
  {- Arity: 4, Strictness: <S,1*U><S,U><L,U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interpretation.Write.executeWrite1
                  `cast`
                (<Language.NGLessObject>_R
                 ->_R <[(Data.Text.Internal.Text, Language.NGLessObject)]>_R
                 ->_R (<GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <Language.NGLessObject>_R)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                             <GHC.Types.IO>_R
                                                                             <Language.NGLessObject>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <Language.NGLessObject>_N)) -}
321515b27e3ec41e2ee59773e46ad619
  executeWrite1 ::
    Language.NGLessObject
    -> [(Data.Text.Internal.Text, Language.NGLessObject)]
    -> GHC.IORef.IORef Control.Monad.Trans.Resource.Internal.ReleaseMap
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Language.NGLessObject #)
  {- Arity: 4, Strictness: <S,1*U><S,U><L,U(U)><S,U> -}
43ab2861b2a7b087bdf349661d6e17a7
  moveOrCopyCompress ::
    GHC.Types.Bool
    -> GHC.IO.FilePath -> GHC.IO.FilePath -> NGLess.NGError.NGLessIO ()
  {- Arity: 3, Strictness: <L,U><L,U><S,U> -}
c481154aadb9f77cfed1044f9e51b368
  woAutoComment ::
    Interpretation.Write.WriteOptions -> [Output.AutoComment]
  RecSel Left Interpretation.Write.WriteOptions
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSL),1*U(A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Interpretation.Write.WriteOptions) ->
                 case ds of wild { Interpretation.Write.WriteOptions ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds7 }) -}
c481154aadb9f77cfed1044f9e51b368
  woCanMove :: Interpretation.Write.WriteOptions -> GHC.Types.Bool
  RecSel Left Interpretation.Write.WriteOptions
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLL),1*U(A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Interpretation.Write.WriteOptions) ->
                 case ds of wild { Interpretation.Write.WriteOptions ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds4 }) -}
c481154aadb9f77cfed1044f9e51b368
  woComment ::
    Interpretation.Write.WriteOptions
    -> GHC.Maybe.Maybe Data.Text.Internal.Text
  RecSel Left Interpretation.Write.WriteOptions
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLL),1*U(A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Interpretation.Write.WriteOptions) ->
                 case ds of wild { Interpretation.Write.WriteOptions ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds6 }) -}
c481154aadb9f77cfed1044f9e51b368
  woFormat ::
    Interpretation.Write.WriteOptions
    -> GHC.Maybe.Maybe Data.Text.Internal.Text
  RecSel Left Interpretation.Write.WriteOptions
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLL),1*U(A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Interpretation.Write.WriteOptions) ->
                 case ds of wild { Interpretation.Write.WriteOptions ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds2 }) -}
c481154aadb9f77cfed1044f9e51b368
  woFormatFlags ::
    Interpretation.Write.WriteOptions
    -> GHC.Maybe.Maybe Data.Text.Internal.Text
  RecSel Left Interpretation.Write.WriteOptions
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLL),1*U(A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Interpretation.Write.WriteOptions) ->
                 case ds of wild { Interpretation.Write.WriteOptions ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds3 }) -}
c481154aadb9f77cfed1044f9e51b368
  woHash ::
    Interpretation.Write.WriteOptions -> Data.Text.Internal.Text
  RecSel Left Interpretation.Write.WriteOptions
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLS),1*U(A,A,A,A,A,A,A,1*U(U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Interpretation.Write.WriteOptions) ->
                 case ds of wild { Interpretation.Write.WriteOptions ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds8 }) -}
c481154aadb9f77cfed1044f9e51b368
  woOFile :: Interpretation.Write.WriteOptions -> GHC.IO.FilePath
  RecSel Left Interpretation.Write.WriteOptions
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLL),1*U(1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Interpretation.Write.WriteOptions) ->
                 case ds of wild { Interpretation.Write.WriteOptions ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds1 }) -}
c481154aadb9f77cfed1044f9e51b368
  woVerbose :: Interpretation.Write.WriteOptions -> GHC.Types.Bool
  RecSel Left Interpretation.Write.WriteOptions
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLL),1*U(A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Interpretation.Write.WriteOptions) ->
                 case ds of wild { Interpretation.Write.WriteOptions ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 ds5 }) -}
instance GHC.Classes.Eq [Interpretation.Write.WriteOptions]
  = Interpretation.Write.$fEqWriteOptions
"SPEC/Interpretation.Write $fApplicativeResourceT @ IO" [orphan] forall (v :: GHC.Base.Applicative
                                                                                GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT @ GHC.Types.IO
                                                               v
  = Interpretation.Write.$s$fApplicativeResourceT
"SPEC/Interpretation.Write $fApplicativeResourceT @ NGLessIO" [orphan] forall (v :: GHC.Base.Applicative
                                                                                      NGLess.NGError.NGLessIO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT @ NGLess.NGError.NGLessIO
                                                               v
  = Interpretation.Write.$s$fApplicativeResourceT1
"SPEC/Interpretation.Write $fFunctorResourceT @ IO" [orphan] forall (v :: GHC.Base.Functor
                                                                            GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fFunctorResourceT @ GHC.Types.IO
                                                           v
  = Interpretation.Write.$s$fApplicativeResourceT_$s$fFunctorResourceT
"SPEC/Interpretation.Write $fFunctorResourceT @ NGLessIO" [orphan] forall (v :: GHC.Base.Functor
                                                                                  NGLess.NGError.NGLessIO)
  Control.Monad.Trans.Resource.Internal.$fFunctorResourceT @ NGLess.NGError.NGLessIO
                                                           v
  = Interpretation.Write.$s$fApplicativeResourceT_$s$fFunctorResourceT1
"SPEC/Interpretation.Write $fMonadErroreResourceT @ NGError @ NGLessIO" [orphan] forall (v :: Control.Monad.Error.Class.MonadError
                                                                                                NGLess.NGError.NGError
                                                                                                NGLess.NGError.NGLessIO)
  Control.Monad.Trans.Resource.Internal.$fMonadErroreResourceT @ NGLess.NGError.NGError
                                                               @ NGLess.NGError.NGLessIO
                                                               v
  = Interpretation.Write.$s$fMonadErroreResourceT
"SPEC/Interpretation.Write $fMonadErroreResourceT1 @ NGError @ NGLessIO" [orphan] forall ($dMonadError :: Control.Monad.Error.Class.MonadError
                                                                                                            NGLess.NGError.NGError
                                                                                                            NGLess.NGError.NGLessIO)
  Control.Monad.Trans.Resource.Internal.$fMonadErroreResourceT1 @ NGLess.NGError.NGError
                                                                @ NGLess.NGError.NGLessIO
                                                                $dMonadError
  = Interpretation.Write.$s$fMonadErroreResourceT1
"SPEC/Interpretation.Write $fMonadErroreResourceT_$cthrowError @ NGError @ NGLessIO" [orphan] forall ($dMonadError :: Control.Monad.Error.Class.MonadError
                                                                                                                        NGLess.NGError.NGError
                                                                                                                        NGLess.NGError.NGLessIO)
  Control.Monad.Trans.Resource.Internal.$fMonadErroreResourceT_$cthrowError @ NGLess.NGError.NGError
                                                                            @ NGLess.NGError.NGLessIO
                                                                            $dMonadError
  = Interpretation.Write.$s$fMonadErroreResourceT_$cthrowError
"SPEC/Interpretation.Write $fMonadIOResourceT @ IO" [orphan] forall (v :: Control.Monad.IO.Class.MonadIO
                                                                            GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT @ GHC.Types.IO
                                                           v
  = Interpretation.Write.$s$fMonadIOResourceT
"SPEC/Interpretation.Write $fMonadIOResourceT @ NGLessIO" [orphan] forall (v :: Control.Monad.IO.Class.MonadIO
                                                                                  NGLess.NGError.NGLessIO)
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT @ NGLess.NGError.NGLessIO
                                                           v
  = Interpretation.Write.$s$fMonadIOResourceT1
"SPEC/Interpretation.Write $fMonadIOResourceT_$cliftIO @ IO" [orphan] forall ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                             GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT_$cliftIO @ GHC.Types.IO
                                                                    $dMonadIO
  = Interpretation.Write.$s$fMonadIOResourceT_$cliftIO
"SPEC/Interpretation.Write $fMonadIOResourceT_$cliftIO @ NGLessIO" [orphan] forall ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                                   NGLess.NGError.NGLessIO)
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT_$cliftIO @ NGLess.NGError.NGLessIO
                                                                    $dMonadIO
  = Interpretation.Write.$s$fMonadIOResourceT_$cliftIO1
"SPEC/Interpretation.Write $fMonadResourceResourceT @ IO" [orphan] forall (v :: Control.Monad.IO.Class.MonadIO
                                                                                  GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT @ GHC.Types.IO
                                                                 v
  = Interpretation.Write.$s$fMonadResourceResourceT1
"SPEC/Interpretation.Write $fMonadResourceResourceT @ NGLessIO" [orphan] forall (v :: Control.Monad.IO.Class.MonadIO
                                                                                        NGLess.NGError.NGLessIO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT @ NGLess.NGError.NGLessIO
                                                                 v
  = Interpretation.Write.$s$fMonadResourceResourceT
"SPEC/Interpretation.Write $fMonadResourceResourceT1 @ IO" [orphan] forall ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                           GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT1 @ GHC.Types.IO
                                                                  $dMonadIO
  = Interpretation.Write.$s$fMonadResourceResourceT3
"SPEC/Interpretation.Write $fMonadResourceT @ IO" [orphan] forall (v :: GHC.Base.Monad
                                                                          GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT @ GHC.Types.IO
                                                         v
  = Interpretation.Write.$s$fMonadIOResourceT_$s$fMonadResourceT
"SPEC/Interpretation.Write $fMonadResourceT @ NGLessIO" [orphan] forall (v :: GHC.Base.Monad
                                                                                NGLess.NGError.NGLessIO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT @ NGLess.NGError.NGLessIO
                                                         v
  = Interpretation.Write.$s$fMonadErroreResourceT_$s$fMonadResourceT
"SPEC/Interpretation.Write $fMonadResourceT_$c>> @ IO" [orphan] forall ($dMonad :: GHC.Base.Monad
                                                                                     GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$c>> @ GHC.Types.IO
                                                              $dMonad
  = Interpretation.Write.$s$fMonadIOResourceT_$s$fMonadResourceT_$c>>
"SPEC/Interpretation.Write $fMonadResourceT_$c>> @ NGLessIO" [orphan] forall ($dMonad :: GHC.Base.Monad
                                                                                           NGLess.NGError.NGLessIO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$c>> @ NGLess.NGError.NGLessIO
                                                              $dMonad
  = Interpretation.Write.$s$fMonadErroreResourceT_$s$fMonadResourceT_$c>>
"SPEC/Interpretation.Write $fMonadResourceT_$creturn @ IO" [orphan] forall ($dMonad :: GHC.Base.Monad
                                                                                         GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$creturn @ GHC.Types.IO
                                                                  $dMonad
  = Interpretation.Write.$s$fMonadResourceT_$creturn
"SPEC/Interpretation.Write $fMonadResourceT_$creturn @ NGLessIO" [orphan] forall ($dMonad :: GHC.Base.Monad
                                                                                               NGLess.NGError.NGLessIO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$creturn @ NGLess.NGError.NGLessIO
                                                                  $dMonad
  = Interpretation.Write.$s$fMonadResourceT_$creturn1
"SPEC/Interpretation.Write $fMonadThrowResourceT @ IO" [orphan] forall (v :: Control.Monad.Catch.MonadThrow
                                                                               GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadThrowResourceT @ GHC.Types.IO
                                                              v
  = Interpretation.Write.$s$fMonadThrowResourceT1
"SPEC/Interpretation.Write $fMonadThrowResourceT @ NGLessIO" [orphan] forall (v :: Control.Monad.Catch.MonadThrow
                                                                                     NGLess.NGError.NGLessIO)
  Control.Monad.Trans.Resource.Internal.$fMonadThrowResourceT @ NGLess.NGError.NGLessIO
                                                              v
  = Interpretation.Write.$s$fMonadThrowResourceT
"SPEC/Interpretation.Write $fMonadThrowResourceT_$cthrowM @ IO" [orphan] forall ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                   GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadThrowResourceT_$cthrowM @ GHC.Types.IO
                                                                       $dMonadThrow
  = Interpretation.Write.$s$fMonadThrowResourceT_$cthrowM1
"SPEC/Interpretation.Write $fMonadThrowResourceT_$cthrowM @ NGLessIO" [orphan] forall ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                         NGLess.NGError.NGLessIO)
  Control.Monad.Trans.Resource.Internal.$fMonadThrowResourceT_$cthrowM @ NGLess.NGError.NGLessIO
                                                                       $dMonadThrow
  = Interpretation.Write.$s$fMonadThrowResourceT_$cthrowM
"SPEC/Interpretation.Write $fMonadUnliftIOResourceT @ IO" [orphan] forall (v :: Control.Monad.IO.Unlift.MonadUnliftIO
                                                                                  GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadUnliftIOResourceT @ GHC.Types.IO
                                                                 v
  = Interpretation.Write.$s$fMonadUnliftIOResourceT1
"SPEC/Interpretation.Write $fMonadUnliftIOResourceT @ NGLessIO" [orphan] forall (v :: Control.Monad.IO.Unlift.MonadUnliftIO
                                                                                        NGLess.NGError.NGLessIO)
  Control.Monad.Trans.Resource.Internal.$fMonadUnliftIOResourceT @ NGLess.NGError.NGLessIO
                                                                 v
  = Interpretation.Write.$s$fMonadUnliftIOResourceT
"SPEC/Interpretation.Write $fMonadUnliftIOResourceT_$cwithRunInIO @ IO" [orphan] forall ($dMonadUnliftIO :: Control.Monad.IO.Unlift.MonadUnliftIO
                                                                                                              GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadUnliftIOResourceT_$cwithRunInIO @ GHC.Types.IO
                                                                               $dMonadUnliftIO
  = Interpretation.Write.$s$fMonadUnliftIOResourceT_$s$fMonadUnliftIOResourceT_$cwithRunInIO1
"SPEC/Interpretation.Write $fMonadUnliftIOResourceT_$cwithRunInIO @ NGLessIO" [orphan] forall ($dMonadUnliftIO :: Control.Monad.IO.Unlift.MonadUnliftIO
                                                                                                                    NGLess.NGError.NGLessIO)
  Control.Monad.Trans.Resource.Internal.$fMonadUnliftIOResourceT_$cwithRunInIO @ NGLess.NGError.NGLessIO
                                                                               $dMonadUnliftIO
  = Interpretation.Write.$s$fMonadUnliftIOResourceT_$s$fMonadUnliftIOResourceT_$cwithRunInIO
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

