
==================== FINAL INTERFACE ====================
2020-02-24 04:15:15.601833685 UTC

interface NGLess-1.1.0-965Np14lOUvJ2rS9XGhph5:Interpretation.FastQ 8065
  interface hash: abb84d1aa63e402f1da3703bdc2cc217
  ABI hash: dbbf0398304c43a8cd356eee3fc4dbb4
  export-list hash: 98d488bab45322c52b93af6c51bc1569
  orphan hash: 4eee86672ca6b726d14c781d6943085b
  flag hash: 12bfaca5368f8f6383b5cc79cfa0e0a8
  opt_hash: 9851e58a0ec35d0fd39c07cdbeb6257b
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Interpretation.FastQ.encodingFor
  Interpretation.FastQ.executeFastq
  Interpretation.FastQ.executeGroup
  Interpretation.FastQ.executePaired
  Interpretation.FastQ.executeShortReadsMethod
module dependencies: CmdArgs Configuration Data.FastQ Data.Sam
                     Dependencies.Embedded FileManagement FileOrStream Language NGLess
                     NGLess.NGError NGLess.NGLEnvironment Output Paths_NGLess
                     Utils.Conduit Utils.LockFile Utils.Samtools Utils.Suggestion
                     Utils.Utils Utils.Vector Version
package dependencies: JuicyPixels-3.3.4 MissingH-1.4.1.0
                      StateVar-1.2 active-0.2.0.14 adjunctions-4.4 aeson-1.4.6.0
                      ansi-terminal-0.9.1 ansi-wl-pprint-0.6.9 array-0.5.3.0 async-2.2.2
                      attoparsec-0.13.2.3 base-4.12.0.0 base-compat-0.10.5
                      base-orphans-0.8.1 base64-bytestring-1.0.0.2 bifunctors-5.5.6
                      binary-0.8.6.0 blaze-builder-0.4.1.0 bytes-0.15.5
                      bytestring-0.10.8.2 bzlib-conduit-0.3.0.2 call-stack-0.1.0
                      cereal-0.5.8.1 cereal-conduit-0.8.0 charset-0.3.7.1 colour-2.3.5
                      comonad-5.0.6 conduit-1.3.1.2 conduit-algorithms-0.0.11.0
                      conduit-extra-1.3.4 conduit-zstd-0.0.1.1 configurator-0.3.0.0
                      containers-0.6.0.1 contravariant-1.5.2 convertible-1.1.1.0
                      data-default-class-0.1.2.0 deepseq-1.4.4.0 diagrams-core-1.4.2
                      diagrams-lib-1.4.3 diagrams-solve-0.1.1 diagrams-svg-1.4.3
                      directory-1.3.3.0 distributive-0.6.1 dlist-0.8.0.7
                      dual-tree-0.2.2.1 edit-distance-0.2.2.1 errors-2.3.0
                      exceptions-0.10.4 extra-1.6.18 file-embed-0.0.11.1 filepath-1.4.2.1
                      fingertree-0.1.4.2 free-5.1.3 ghc-boot-th-8.6.5 ghc-prim-0.5.3
                      gitrev-1.3.1 hashable-1.2.7.0 hostname-1.0 inline-c-0.7.0.1
                      integer-gmp-1.0.2.0 integer-logarithms-1.0.3 intervals-0.8.1
                      kan-extensions-5.2 lens-4.17.1 linear-1.20.9 lzma-0.0.0.3
                      lzma-conduit-1.2.1 monad-loops-0.4.3 mono-traversable-1.0.15.1
                      monoid-extras-0.5.1 mtl-2.2.2 newtype-generics-0.5.4
                      old-locale-1.0.0.7 old-time-1.1.0.3 optparse-applicative-0.14.3.0
                      parsec-3.1.14.0 parsers-0.12.10 pretty-1.1.3.6 primitive-0.6.4.0
                      process-1.6.5.0 profunctors-5.3 random-1.1 reflection-2.1.5
                      regex-1.0.2.0 regex-base-0.93.2 regex-compat-0.95.1
                      regex-pcre-builtin-0.94.5.8.8.35 regex-posix-0.95.2
                      regex-tdfa-1.2.3.2 regex-tdfa-text-1.0.0.3 resourcet-1.2.2
                      safe-0.3.18 safeio-0.0.5.0 scientific-0.3.6.2 semigroupoids-5.3.4
                      split-0.2.3.3 stm-2.5.0.0 stm-chans-3.0.0.4 stm-conduit-4.0.1
                      streaming-commons-0.2.1.1 strict-0.3.2 svg-builder-0.1.1
                      tagged-0.8.6 tar-0.5.1.1 template-haskell-2.14.0.0 text-1.2.3.1
                      th-abstraction-0.3.1.0 time-1.8.0.2 time-compat-1.9.2.2
                      time-locale-compat-0.1.1.5 transformers-0.5.6.2
                      transformers-base-0.4.5.2 transformers-compat-0.6.5 unix-2.7.2.2
                      unix-compat-0.5.2 unliftio-0.2.12 unliftio-core-0.1.2.0
                      unordered-containers-0.2.10.0 utf8-string-1.0.1.1 uuid-types-1.0.3
                      vector-0.12.0.3 vector-algorithms-0.8.0.3 zlib-0.6.2.1 zstd-0.1.1.2
orphans: conduit-extra-1.3.4:Data.Conduit.Process
         regex-1.0.2.0:Text.RE.TDFA.String
         regex-tdfa-text-1.0.0.3:Text.Regex.TDFA.Text
         regex-tdfa-text-1.0.0.3:Text.Regex.TDFA.Text.Lazy
         regex-pcre-builtin-0.94.5.8.8.35:Text.Regex.PCRE.String
         regex-pcre-builtin-0.94.5.8.8.35:Text.Regex.PCRE.Sequence
         regex-pcre-builtin-0.94.5.8.8.35:Text.Regex.PCRE.ByteString.Lazy
         regex-pcre-builtin-0.94.5.8.8.35:Text.Regex.PCRE.ByteString
         regex-tdfa-1.2.3.2:Text.Regex.TDFA.ByteString
         regex-tdfa-1.2.3.2:Text.Regex.TDFA.ByteString.Lazy
         regex-tdfa-1.2.3.2:Text.Regex.TDFA.Sequence
         regex-tdfa-1.2.3.2:Text.Regex.TDFA.String
         regex-posix-0.95.2:Text.Regex.Posix.String
         regex-posix-0.95.2:Text.Regex.Posix.Sequence
         regex-posix-0.95.2:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2:Text.Regex.Posix.ByteString
         regex-base-0.93.2:Text.Regex.Base.Context
         convertible-1.1.1.0:Data.Convertible.Instances.C
         convertible-1.1.1.0:Data.Convertible.Instances.Map
         convertible-1.1.1.0:Data.Convertible.Instances.Text
         convertible-1.1.1.0:Data.Convertible.Instances.Time
         convertible-1.1.1.0:Data.Convertible.Instances.Num
         attoparsec-0.13.2.3:Data.Attoparsec.ByteString.Char8
         diagrams-lib-1.4.3:Diagrams.Animation.Active
         diagrams-lib-1.4.3:Diagrams.TwoD.Path
         diagrams-lib-1.4.3:Diagrams.TwoD.Segment
         diagrams-lib-1.4.3:Diagrams.Trail
         diagrams-lib-1.4.3:Diagrams.ThreeD.Types
         diagrams-lib-1.4.3:Diagrams.TwoD.Types
         diagrams-core-1.4.2:Diagrams.Core.Types
         monoid-extras-0.5.1:Data.Monoid.MList
         diagrams-core-1.4.2:Diagrams.Core.Points
         time-1.8.0.2:Data.Time.Clock.TAI reflection-2.1.5:Data.Reflection
         linear-1.20.9:Linear.Instances vector-0.12.0.3:Data.Vector.Unboxed
         vector-0.12.0.3:Data.Vector.Fusion.Bundle
         stm-2.5.0.0:Control.Monad.STM time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         configurator-0.3.0.0:Data.Configurator.Instances
         transformers-0.5.6.2:Control.Monad.Trans.Error
         attoparsec-0.13.2.3:Data.Attoparsec.Text.Internal
         colour-2.3.5:Data.Colour hashable-1.2.7.0:Data.Hashable.Generic
         text-1.2.3.1:Data.Text.Lazy text-1.2.3.1:Data.Text
         binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: JuicyPixels-3.3.4:Codec.Picture.Tga
                         JuicyPixels-3.3.4:Codec.Picture.Tiff
                         JuicyPixels-3.3.4:Codec.Picture.Types
                         NGLess-1.1.0-965Np14lOUvJ2rS9XGhph5:NGLess.NGError
                         active-0.2.0.14:Data.Active adjunctions-4.4:Data.Functor.Rep
                         aeson-1.4.6.0:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.3:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         bifunctors-5.5.6:Data.Bifunctor.Biff
                         bifunctors-5.5.6:Data.Bifunctor.Clown
                         bifunctors-5.5.6:Data.Bifunctor.Fix
                         bifunctors-5.5.6:Data.Bifunctor.Flip
                         bifunctors-5.5.6:Data.Bifunctor.Join
                         bifunctors-5.5.6:Data.Bifunctor.Joker
                         bifunctors-5.5.6:Data.Bifunctor.Product
                         bifunctors-5.5.6:Data.Bifunctor.Sum
                         bifunctors-5.5.6:Data.Bifunctor.Tannen
                         bifunctors-5.5.6:Data.Bifunctor.Wrapped bytes-0.15.5:Data.Bytes.Get
                         bytes-0.15.5:Data.Bytes.Signed bytes-0.15.5:Data.Bytes.VarInt
                         conduit-1.3.1.2:Data.Conduit.Internal.Conduit
                         conduit-1.3.1.2:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         diagrams-core-1.4.2:Diagrams.Core.Envelope
                         diagrams-core-1.4.2:Diagrams.Core.Measure
                         diagrams-core-1.4.2:Diagrams.Core.Names
                         diagrams-core-1.4.2:Diagrams.Core.Points
                         diagrams-core-1.4.2:Diagrams.Core.Query
                         diagrams-core-1.4.2:Diagrams.Core.Style
                         diagrams-core-1.4.2:Diagrams.Core.Trace
                         diagrams-core-1.4.2:Diagrams.Core.Transform
                         diagrams-core-1.4.2:Diagrams.Core.Types
                         diagrams-core-1.4.2:Diagrams.Core.V
                         diagrams-lib-1.4.3:Diagrams.Angle
                         diagrams-lib-1.4.3:Diagrams.Animation.Active
                         diagrams-lib-1.4.3:Diagrams.BoundingBox
                         diagrams-lib-1.4.3:Diagrams.Coordinates
                         diagrams-lib-1.4.3:Diagrams.Direction
                         diagrams-lib-1.4.3:Diagrams.Located
                         diagrams-lib-1.4.3:Diagrams.Path
                         diagrams-lib-1.4.3:Diagrams.Segment
                         diagrams-lib-1.4.3:Diagrams.Size
                         diagrams-lib-1.4.3:Diagrams.Tangent
                         diagrams-lib-1.4.3:Diagrams.ThreeD.Camera
                         diagrams-lib-1.4.3:Diagrams.ThreeD.Light
                         diagrams-lib-1.4.3:Diagrams.ThreeD.Shapes
                         diagrams-lib-1.4.3:Diagrams.ThreeD.Types
                         diagrams-lib-1.4.3:Diagrams.Trail
                         diagrams-lib-1.4.3:Diagrams.TwoD.Attributes
                         diagrams-lib-1.4.3:Diagrams.TwoD.Image
                         diagrams-lib-1.4.3:Diagrams.TwoD.Path
                         diagrams-lib-1.4.3:Diagrams.TwoD.Segment.Bernstein
                         diagrams-lib-1.4.3:Diagrams.TwoD.Text
                         diagrams-lib-1.4.3:Diagrams.TwoD.Types
                         diagrams-svg-1.4.3:Diagrams.Backend.SVG dlist-0.8.0.7:Data.DList
                         dual-tree-0.2.2.1:Data.Tree.DUAL.Internal
                         fingertree-0.1.4.2:Data.FingerTree
                         free-5.1.3:Control.Comonad.Cofree
                         free-5.1.3:Control.Comonad.Trans.Cofree
                         free-5.1.3:Control.Monad.Free free-5.1.3:Control.Monad.Trans.Free
                         ghc-boot-th-8.6.5:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.5:GHC.LanguageExtensions.Type
                         inline-c-0.7.0.1:Language.C.Inline
                         inline-c-0.7.0.1:Language.C.Inline.Context
                         intervals-0.8.1:Numeric.Interval.Kaucher
                         kan-extensions-5.2:Data.Functor.Day
                         kan-extensions-5.2:Data.Functor.Yoneda lens-4.17.1:Control.Lens.At
                         lens-4.17.1:Control.Lens.Internal.Indexed
                         lens-4.17.1:Control.Lens.Reified lens-4.17.1:Control.Lens.Tuple
                         lens-4.17.1:Control.Lens.Wrapped lens-4.17.1:Control.Lens.Zoom
                         linear-1.20.9:Linear.Affine linear-1.20.9:Linear.Plucker
                         linear-1.20.9:Linear.Quaternion linear-1.20.9:Linear.V
                         linear-1.20.9:Linear.V0 linear-1.20.9:Linear.V1
                         linear-1.20.9:Linear.V2 linear-1.20.9:Linear.V3
                         linear-1.20.9:Linear.V4
                         mono-traversable-1.0.15.1:Data.MonoTraversable
                         mono-traversable-1.0.15.1:Data.NonNull
                         mono-traversable-1.0.15.1:Data.Sequences
                         newtype-generics-0.5.4:Control.Newtype.Generics
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         profunctors-5.3:Data.Profunctor.Composition
                         profunctors-5.3:Data.Profunctor.Rep
                         regex-1.0.2.0:Text.RE.ZeInternals.NamedCaptures
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         stm-conduit-4.0.1:Data.Conduit.Async.Composition
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         th-abstraction-0.3.1.0:Language.Haskell.TH.Datatype
                         unliftio-0.2.12:UnliftIO.Internals.Async
                         unordered-containers-0.2.10.0:Data.HashMap.Base
                         unordered-containers-0.2.10.0:Data.HashSet.Base
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.3:Data.Vector vector-0.12.0.3:Data.Vector.Primitive
                         vector-0.12.0.3:Data.Vector.Storable
                         vector-0.12.0.3:Data.Vector.Unboxed
                         vector-0.12.0.3:Data.Vector.Unboxed.Base
                         zlib-0.6.2.1:Codec.Compression.Zlib.Stream
import  -/  Configuration 9a82cb30f48ec6255155f5c7391fb6c7
  exports: 9fc785b50aa90792bcf0bc8c48c96a09
  nConfSubsample b4545dc36df17a7adccb3e6be807ab85
import  -/  Data.FastQ 683044f508718e436592cbb72ea87fc2
  exports: 7f3c9451f8064311c68af66858502794
  FastQEncoding e855b69d2b4c4b672e98f4cca1339e27
  FastQFilePath 3b49cd403d588d2f95c29b96eb9e4162
  FastQFilePath fdd414d88cf948fd1c738d4e396e4d35
  ReadSet c16a307192e6c5c3c5475f335c533ab2
  ReadSet 4c8ae3e110e39629ec05639a3c18db8c
  SangerEncoding 022f7b59ea97b642c080649edf58958c
  ShortRead 22f73d8f1e5cbadca703f79979fa5a28
  SolexaEncoding b403ad994e43f066358798410ee71e3c
  fqDecodeC 136c6f67c091d54e16f11fef6b8830c5
  fqEncode 81a3da95a8903e1a2301f91aaff49d37
  fqStatsC 7638e196b163821a0859ba72658d10e1
  pairedSamples 4c8ae3e110e39629ec05639a3c18db8c
  singleSamples 4c8ae3e110e39629ec05639a3c18db8c
  srHeader 22bd7330b29b52b3752e35cd5ee36bcb
  statsFromFastQ ab9cfdc2d068c82babad57912fa6844f
import  -/  FileManagement fb22fc32ebd4079eedfab3004822d35c
  exports: 0035e3f895add6fcbe2da0a7224ccae1
  openNGLTempFile 2b9c3d55dae96aea37a5265a4ee4d09e
import  -/  Language 93f0f50a5c7ee77231d71d6a98e7a8ca
  exports: 6aa5d24204c11e6b2a36767cd645b21f
  MethodName 3a7b3929a7abcd9627c07af2ab496db6
  NGLessObject ea18243860934472078c5e2ccd0edf40
  NGODouble 9d80de0d6037d8b3cead7effb5b97bbb
  NGOInteger 395b0ce4eb20fbcf334f84acb2d7ff1d
  NGOList 488dd32aa90ff5894de15c18619c34df
  NGOReadSet c3ec807d5d7afc041d47d76cd179ed0b
  NGOShortRead a90390eaa1ea53f098575746452f0974
  NGOString 155e4815cffdc2c6617b34a2d52b7659
import  -/  NGLess a5aa819ac1d32c5f90c4109da4ddd56b
  exports: c338d02d81e70b5020d9e8bfbcb7ea8c
  KwArgsValues 830496506778855ea845b2c49d2ab17b
  lookupBoolOrScriptErrorDef ffe642effd69bd9a48ab477563baaa98
  lookupStringOrScriptError bc5829862d5b7f2576b249b0034f31cf
  lookupStringOrScriptErrorDef 091ee7c11152f594797c474536503c77
  lookupSymbolOrScriptErrorDef a240a0fb0565b0f33a8458942701be2b
import  -/  NGLess.NGError 9175c652eec68d1a195f3eb2d7471cb5
  NGLess 416e5726ee4c4987c25367d545064990
  NGLessIO f1fd902a0de985a61e8d9110730dfc21
  runNGLess a41ed825730df1edb93a7b2b931843fe
  testNGLessIO e89cbb9187081d3497a1914ba53cbd6b
  throwDataError c062fbeafb6afe5ad95562e1e7cbc6a7
  throwScriptError 96adea1584aa4db243e08c54da5ff3c3
  throwShouldNotOccur 6b0f4fcf8b2bcdc53931daab853fb839
import  -/  NGLess.NGLEnvironment 4ab4e397a1ac25f8e152520a0a756399
  exports: 140b883e1db9882b0aa097954c9eea1d
  nglConfiguration 539294010c83651951422c2571efcf9e
import  -/  Output 65dbbbf5895e64168b49be3b8326af6d
  exports: a41ff3401bfa3e00d33ddbc94a1eeb35
  TraceOutput eda030b46a813215b38990f8f484bfe9
  WarningOutput bb4505448b44871ee533a71ef46281ca
  outputFQStatistics 0506faa0ba2e57b0f6d3af4441ce0868
  outputListLno' 1a98fdc3c349e65a0f427ea401025c97
import  -/  Utils.Conduit 3529d55b10a7cbdf7250fd156212ef77
  exports: 899923d44363d2db775d0cbeb374b958
  ByteLine ac33b1a48ce77fc02979f39021c406e3
  linesC 74def1591ec8f05f38349accac761045
import  -/  async-2.2.2:Control.Concurrent.Async 539dde74c83d07130d3155c90555c63d
import  -/  base-4.12.0.0:Control.Exception 041da5b6267cf6b639ff5716d5b299a9
import  -/  base-4.12.0.0:Control.Exception.Base 28f76dc5daa23d33c2b03285506ae9fc
import  -/  base-4.12.0.0:Control.Monad 07eaec7fd256019b318d048d00f45b1c
import  -/  base-4.12.0.0:Control.Monad.IO.Class e96805f9d79f75be66a0d44eb83064c1
import  -/  base-4.12.0.0:Data.Foldable efb37371da929e7bc88d896298d2d979
import  -/  base-4.12.0.0:Data.Functor 069b2025a03e32fd228e74a86a58a075
import  -/  base-4.12.0.0:Data.Maybe 9b76a39e833465c3c5b3c078b431417f
import  -/  base-4.12.0.0:Data.Traversable d2c09bff1e4f0c871306c3ff8aa4dc36
import  -/  base-4.12.0.0:Data.Word 6b968b6c7df442cfcad986e497aee095
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.Enum 87204abed08db8735fc0be5ab48689aa
import  -/  base-4.12.0.0:GHC.IO 898d4ddbf00eb4732e5f462760aa42ae
import  -/  base-4.12.0.0:GHC.IO.Handle fe51659cf05ea3ecd36fe5e2d515d89a
import  -/  base-4.12.0.0:GHC.IO.Handle.Types 8909e00409cd23d4e66395a7e93f216d
import  -/  base-4.12.0.0:GHC.Num c2039f03637c68f47b0bbff4c18ec616
import  -/  base-4.12.0.0:GHC.Real af2b985dd29515c375fb78b2c9298d42
import  -/  base-4.12.0.0:GHC.Show 838a5d039379d82d9626aae53dfce276
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  base-4.12.0.0:System.IO dd4f3cfe73b94b7cae46a4ca98a3f09f
import  -/  bytestring-0.10.8.2:Data.ByteString fd8cecf441c361eb2e989315be3b33ab
import  -/  bytestring-0.10.8.2:Data.ByteString.Char8 c4fe0102babc102f36c4516d04d0159e
import  -/  bytestring-0.10.8.2:Data.ByteString.Internal f8067c0775041a7adb8f53745475ed88
import  -/  conduit-1.3.1.2:Data.Conduit a386d3988254720545738ed91850d867
import  -/  conduit-1.3.1.2:Data.Conduit.Combinators 347317c879e3debf6cbfb4f316e8bcb4
import  -/  conduit-1.3.1.2:Data.Conduit.Internal.Conduit 4cfa2d636f9204a4aa47382da9b0ff36
import  -/  conduit-1.3.1.2:Data.Conduit.List de08038b39705aaad9564275ec6efc45
import  -/  conduit-algorithms-0.0.11.0:Data.Conduit.Algorithms.Async c705e379633faccd5884d6a9e46c803e
import  -/  conduit-algorithms-0.0.11.0:Data.Conduit.Algorithms.Utils d2a921b831bbb50309f9f422b2ce43e3
import  -/  conduit-extra-1.3.4:Data.Conduit.Binary c81ebc9541e9b8e064aeb9f939263ed9
import  -/  ghc-prim-0.5.3:GHC.Classes 0f6fd7d7db53fc48f6e1f01803cc6c9d
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  integer-gmp-1.0.2.0:GHC.Integer.Type 6d87087aea24143d2650f78480d954a3
import  -/  mtl-2.2.2:Control.Monad.Except 5ca04d82f027e75c6a16c1ed916c1305
import  -/  resourcet-1.2.2:Control.Monad.Trans.Resource 4caff92d040d1a01bd287dd8bb1ca934
import  -/  text-1.2.3.1:Data.Text e31b81fb349ec0694c028af9d897c500
import  -/  text-1.2.3.1:Data.Text.Internal 537e168590e8068f673f691833f78483
import  -/  text-1.2.3.1:Data.Text.Show b788b7edd0f190b1a7c4f4aba0e35f18
import  -/  transformers-0.5.6.2:Control.Monad.Trans.Class ce71df227db199c1d525fc0992381112
import  -/  vector-0.12.0.3:Data.Vector.Storable 96d3c1076ef135fbf75fb6a0596d2d3b
addDependentFile "/home/sajjal/.stack/programs/x86_64-linux/ghc-8.6.5/lib/ghc-8.6.5/include/ghcversion.h" 43db44f9bb88490c2fa995e5f5ec33f2
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-2.4.0.1/build/autogen/cabal_macros.h" e3731cb12b83b9e47defd67255252b42
addDependentFile "/usr/include/stdc-predef.h" 64086a4476ea583071277345b423d741
dfdd01d97712888d55005f4adee39f5b
  $s$fApplicativeResourceT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Interpretation.FastQ.$s$fApplicativeResourceT_$s$fFunctorResourceT
                  (\ @ a (eta :: a) ->
                   let {
                     x :: GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 1 -}
                     = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                   } in
                   (\ (ds :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <a>_R)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                      <GHC.Types.IO>_R <a>_N)))
                  (\ @ a
                     @ b
                     (ds :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO (a -> b))
                     (ds1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a -> b>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a -> b>_R)
                          s of ds2 { (#,#) ipv ipv1 ->
                   case (ds1
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          ipv of ds3 { (#,#) ipv2 ipv3 ->
                   (# ipv2, ipv1 ipv3 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT
                      GHC.Types.IO (a -> b)>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO a>_R
                   ->_R (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <b>_R)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                          <GHC.Types.IO>_R <b>_N))
                  (Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT2
                     @ GHC.Types.IO
                     GHC.Base.$fApplicativeIO)
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N).
                   <a -> b -> c>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO a>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO b>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <GHC.Types.IO>_R <c>_N))
                  (Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT3
                     @ GHC.Types.IO
                     GHC.Base.$fApplicativeIO)
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO b>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <GHC.Types.IO>_R <b>_N))
                  (\ @ a @ b ->
                   Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT2
                     @ GHC.Types.IO
                     GHC.Base.$fApplicativeIO
                     @ a
                     @ b
                     @ a
                     (GHC.Base.const @ a @ b))
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO b>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <GHC.Types.IO>_R <a>_N)) -}
e080f0cc99cc655aabc65d834c5d32e1
  $s$fApplicativeResourceT1 ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       NGLess.NGError.NGLessIO)
                  Interpretation.FastQ.$s$fApplicativeResourceT_$s$fFunctorResourceT1
                  (\ @ a (eta :: a) ->
                   let {
                     x :: GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap
                          -> GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 2 -}
                     = \ (eta1 :: GHC.IORef.IORef
                                    Control.Monad.Trans.Resource.Internal.ReleaseMap)
                         (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       (# eta2, eta #)
                   } in
                   (\ (ds :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R (<GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <a>_R)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                             <GHC.Types.IO>_R
                                                             <a>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <a>_N)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                                                            <NGLess.NGError.NGLessIO>_R
                                                                                                                            <a>_N)))
                  (\ @ a
                     @ b
                     (ds :: Control.Monad.Trans.Resource.Internal.ResourceT
                              NGLess.NGError.NGLessIO (a -> b))
                     (ds1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               NGLess.NGError.NGLessIO a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   let {
                     ds2 :: NGLess.NGError.NGLessIO (a -> b)
                     = ds
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <NGLess.NGError.NGLessIO>_R <a -> b>_N)
                         r
                   } in
                   let {
                     ds3 :: NGLess.NGError.NGLessIO a
                     = ds1
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <NGLess.NGError.NGLessIO>_R <a>_N)
                         r
                   } in
                   (\ (r1 :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap)
                      (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                    case (ds2
                            `cast`
                          (NGLess.NGError.N:NGLessIO[0] <a
                                                         -> b>_N ; Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                       <GHC.Types.IO>_R <a -> b>_N)
                            r1)
                           `cast`
                         (GHC.Types.N:IO[0] <a -> b>_R)
                           s of ds4 { (#,#) ipv ipv1 ->
                    case (ds3
                            `cast`
                          (NGLess.NGError.N:NGLessIO[0] <a>_N ; Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                    <GHC.Types.IO>_R <a>_N)
                            r1)
                           `cast`
                         (GHC.Types.N:IO[0] <a>_R)
                           ipv of ds5 { (#,#) ipv2 ipv3 ->
                    (# ipv2, ipv1 ipv3 #) } })
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <b>_R)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                       <GHC.Types.IO>_R
                                                       <b>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <b>_N)))
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT
                      NGLess.NGError.NGLessIO (a -> b)>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           NGLess.NGError.NGLessIO a>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <NGLess.NGError.NGLessIO>_R <b>_N))
                  (Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT2
                     @ NGLess.NGError.NGLessIO
                     NGLess.NGError.$fApplicativeNGLessIO)
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N).
                   <a -> b -> c>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           NGLess.NGError.NGLessIO a>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           NGLess.NGError.NGLessIO b>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <NGLess.NGError.NGLessIO>_R <c>_N))
                  (Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT3
                     @ NGLess.NGError.NGLessIO
                     NGLess.NGError.$fApplicativeNGLessIO)
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT
                      NGLess.NGError.NGLessIO a>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           NGLess.NGError.NGLessIO b>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <NGLess.NGError.NGLessIO>_R <b>_N))
                  (\ @ a @ b ->
                   Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT2
                     @ NGLess.NGError.NGLessIO
                     NGLess.NGError.$fApplicativeNGLessIO
                     @ a
                     @ b
                     @ a
                     (GHC.Base.const @ a @ b))
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT
                      NGLess.NGError.NGLessIO a>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           NGLess.NGError.NGLessIO b>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <NGLess.NGError.NGLessIO>_R <a>_N)) -}
c198d0db11f63a50feb8aba7e86050a4
  $s$fApplicativeResourceT_$cpure ::
    a -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (eta :: a) ->
                 let {
                   x :: GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                     {- Arity: 1 -}
                   = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                 } in
                 (\ (ds :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  x)
                   `cast`
                 ((<GHC.IORef.IORef
                      Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <a>_R)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                    <GHC.Types.IO>_R <a>_N))) -}
6170efdd7ae83b427c0656f9e531f471
  $s$fApplicativeResourceT_$cpure1 ::
    a
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO a
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,A><L,A><S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (eta :: a) ->
                 let {
                   x :: GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap
                        -> GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                     {- Arity: 2 -}
                   = \ (eta1 :: GHC.IORef.IORef
                                  Control.Monad.Trans.Resource.Internal.ReleaseMap)
                       (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                     (# eta2, eta #)
                 } in
                 (\ (ds :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  x)
                   `cast`
                 ((<GHC.IORef.IORef
                      Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                   ->_R (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <a>_R)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                           <GHC.Types.IO>_R
                                                           <a>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <a>_N)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                                                          <NGLess.NGError.NGLessIO>_R
                                                                                                                          <a>_N))) -}
8f7eead737d607116168096e21431943
  $s$fApplicativeResourceT_$s$fFunctorResourceT ::
    GHC.Base.Functor
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  (\ @ a
                     @ b
                     (f :: a -> b)
                     (ds :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds1 { (#,#) ipv ipv1 ->
                   (# ipv, f ipv1 #) })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <a -> b>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO a>_R
                   ->_R (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <b>_R)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                          <GHC.Types.IO>_R <b>_N))
                  (\ @ a
                     @ b
                     (x :: a)
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO b)
                     (eta1 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <b>_N)
                           eta1)
                          `cast`
                        (GHC.Types.N:IO[0] <b>_R)
                          s of ds { (#,#) ipv ipv1 ->
                   (# ipv, x #) })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <a>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO b>_R
                   ->_R (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <a>_R)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                          <GHC.Types.IO>_R <a>_N)) -}
90b408281039370ead4240fc2f7bd179
  $s$fApplicativeResourceT_$s$fFunctorResourceT1 ::
    GHC.Base.Functor
      (Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       NGLess.NGError.NGLessIO)
                  (\ @ a
                     @ b
                     (f :: a -> b)
                     (ds :: Control.Monad.Trans.Resource.Internal.ResourceT
                              NGLess.NGError.NGLessIO a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   let {
                     ds1 :: NGLess.NGError.NGLessIO a
                     = ds
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <NGLess.NGError.NGLessIO>_R <a>_N)
                         r
                   } in
                   (\ (r1 :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap)
                      (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                    case (ds1
                            `cast`
                          (NGLess.NGError.N:NGLessIO[0] <a>_N ; Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                    <GHC.Types.IO>_R <a>_N)
                            r1)
                           `cast`
                         (GHC.Types.N:IO[0] <a>_R)
                           s of ds2 { (#,#) ipv ipv1 ->
                    (# ipv, f ipv1 #) })
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <b>_R)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                       <GHC.Types.IO>_R
                                                       <b>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <b>_N)))
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <a -> b>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           NGLess.NGError.NGLessIO a>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <NGLess.NGError.NGLessIO>_R <b>_N))
                  (\ @ a
                     @ b
                     (x :: a)
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               NGLess.NGError.NGLessIO b)
                     (eta1 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   let {
                     ds :: NGLess.NGError.NGLessIO b
                     = eta
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <NGLess.NGError.NGLessIO>_R <b>_N)
                         eta1
                   } in
                   (\ (r :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap)
                      (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                    case (ds
                            `cast`
                          (NGLess.NGError.N:NGLessIO[0] <b>_N ; Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                    <GHC.Types.IO>_R <b>_N)
                            r)
                           `cast`
                         (GHC.Types.N:IO[0] <b>_R)
                           s of ds1 { (#,#) ipv ipv1 ->
                    (# ipv, x #) })
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <a>_R)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                       <GHC.Types.IO>_R
                                                       <a>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <a>_N)))
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <a>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           NGLess.NGError.NGLessIO b>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <NGLess.NGError.NGLessIO>_R <a>_N)) -}
989162303fb4c33c4201f1d0ec7e274c
  $s$fMonadIOResourceT ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       NGLess.NGError.NGLessIO)
                  Interpretation.FastQ.$s$fMonadIOResourceT_$s$fMonadResourceT
                  (\ @ a (eta :: GHC.Types.IO a) ->
                   let {
                     x :: GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap
                          -> GHC.Types.IO a
                       {- Arity: 1 -}
                     = \ (ds :: GHC.IORef.IORef
                                  Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                       eta
                   } in
                   (\ (ds :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                   <GHC.Types.IO>_R
                                   <a>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <a>_N) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                                 <NGLess.NGError.NGLessIO>_R
                                                                                                 <a>_N))) -}
2d1ab78e91e6d6b1772f29090f701d03
  $s$fMonadIOResourceT1 ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Interpretation.FastQ.$s$fMonadIOResourceT_$s$fMonadResourceT1
                  (\ @ a
                     (eta :: GHC.Types.IO a)
                     (ds :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   eta)
                    `cast`
                  (forall (a :: <*>_N).
                   <GHC.Types.IO a>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <GHC.Types.IO>_R <a>_N)) -}
30adf5fc187edeae4a0e9c140b16f050
  $s$fMonadIOResourceT_$s$fMonadResourceT ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       NGLess.NGError.NGLessIO)
                  Interpretation.FastQ.$s$fApplicativeResourceT1
                  (\ @ a
                     @ b
                     (ds :: Control.Monad.Trans.Resource.Internal.ResourceT
                              NGLess.NGError.NGLessIO a)
                     (f :: a
                           -> Control.Monad.Trans.Resource.Internal.ResourceT
                                NGLess.NGError.NGLessIO b)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   let {
                     ds1 :: NGLess.NGError.NGLessIO a
                     = ds
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <NGLess.NGError.NGLessIO>_R <a>_N)
                         r
                   } in
                   (\ (r1 :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap)
                      (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                    case (ds1
                            `cast`
                          (NGLess.NGError.N:NGLessIO[0] <a>_N ; Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                    <GHC.Types.IO>_R <a>_N)
                            r1)
                           `cast`
                         (GHC.Types.N:IO[0] <a>_R)
                           s of ds2 { (#,#) ipv ipv1 ->
                    (((f ipv1)
                        `cast`
                      (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                           <NGLess.NGError.NGLessIO>_R <b>_N)
                        r)
                       `cast`
                     (NGLess.NGError.N:NGLessIO[0] <b>_N ; Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                               <GHC.Types.IO>_R <b>_N)
                       r1)
                      `cast`
                    (GHC.Types.N:IO[0] <b>_R)
                      ipv })
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <b>_R)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                       <GHC.Types.IO>_R
                                                       <b>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <b>_N)))
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT
                      NGLess.NGError.NGLessIO a>_R
                   ->_R <a
                         -> Control.Monad.Trans.Resource.Internal.ResourceT
                              NGLess.NGError.NGLessIO b>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <NGLess.NGError.NGLessIO>_R <b>_N))
                  Interpretation.FastQ.$s$fMonadIOResourceT_$s$fMonadResourceT_$c>>
                  (\ @ a (eta :: a) ->
                   let {
                     x :: GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap
                          -> GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 2 -}
                     = \ (eta1 :: GHC.IORef.IORef
                                    Control.Monad.Trans.Resource.Internal.ReleaseMap)
                         (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       (# eta2, eta #)
                   } in
                   (\ (ds :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R (<GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <a>_R)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                             <GHC.Types.IO>_R
                                                             <a>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <a>_N)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                                                            <NGLess.NGError.NGLessIO>_R
                                                                                                                            <a>_N)))
                  (\ @ a ->
                   GHC.Err.errorWithoutStackTrace
                     @ 'GHC.Types.LiftedRep
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT
                          NGLess.NGError.NGLessIO a)) -}
740f3c8f82ab8e35188d8ba2498ca70d
  $s$fMonadIOResourceT_$s$fMonadResourceT1 ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Interpretation.FastQ.$s$fApplicativeResourceT
                  (\ @ a
                     @ b
                     (ds :: Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO a)
                     (f :: a
                           -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (GHC.Types.N:IO[0] <a>_R)
                          s of ds1 { (#,#) ipv ipv1 ->
                   ((f ipv1)
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                         <GHC.Types.IO>_R <b>_N)
                      r)
                     `cast`
                   (GHC.Types.N:IO[0] <b>_R)
                     ipv })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                   ->_R <a
                         -> Control.Monad.Trans.Resource.Internal.ResourceT
                              GHC.Types.IO b>_R
                   ->_R (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <b>_R)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                          <GHC.Types.IO>_R <b>_N))
                  Interpretation.FastQ.$s$fMonadIOResourceT_$s$fMonadResourceT_$c>>1
                  (\ @ a (eta :: a) ->
                   let {
                     x :: GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 1 -}
                     = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta #)
                   } in
                   (\ (ds :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <a>_R)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                      <GHC.Types.IO>_R <a>_N)))
                  (\ @ a ->
                   GHC.Err.errorWithoutStackTrace
                     @ 'GHC.Types.LiftedRep
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT
                          GHC.Types.IO a)) -}
47ce0546971816a7ab91308873c05622
  $s$fMonadIOResourceT_$s$fMonadResourceT_$c>> ::
    Control.Monad.Trans.Resource.Internal.ResourceT
      NGLess.NGError.NGLessIO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO b
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*C1(C(C1(U(U,A))))><L,C(C1(C1(U)))><L,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ a
                   @ b
                   (m1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                            NGLess.NGError.NGLessIO a)
                   (k :: Control.Monad.Trans.Resource.Internal.ResourceT
                           NGLess.NGError.NGLessIO b)
                   (r :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                 let {
                   ds :: NGLess.NGError.NGLessIO a
                   = m1
                       `cast`
                     (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                          <NGLess.NGError.NGLessIO>_R <a>_N)
                       r
                 } in
                 (\ (r1 :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  case (ds
                          `cast`
                        (NGLess.NGError.N:NGLessIO[0] <a>_N ; Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                  <GHC.Types.IO>_R <a>_N)
                          r1)
                         `cast`
                       (GHC.Types.N:IO[0] <a>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  ((k `cast`
                    (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                         <NGLess.NGError.NGLessIO>_R <b>_N)
                      r)
                     `cast`
                   (NGLess.NGError.N:NGLessIO[0] <b>_N ; Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                             <GHC.Types.IO>_R <b>_N)
                     r1)
                    `cast`
                  (GHC.Types.N:IO[0] <b>_R)
                    ipv })
                   `cast`
                 ((<GHC.IORef.IORef
                      Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <b>_R)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                     <GHC.Types.IO>_R
                                                     <b>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <b>_N)))
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 <Control.Monad.Trans.Resource.Internal.ResourceT
                    NGLess.NGError.NGLessIO a>_R
                 ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                         NGLess.NGError.NGLessIO b>_R
                 ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                               <NGLess.NGError.NGLessIO>_R <b>_N)) -}
224117d2508757b57558446883bdae3e
  $s$fMonadIOResourceT_$s$fMonadResourceT_$c>>1 ::
    Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S(SL))),1*C1(C1(U(U,A)))><L,1*C1(C1(U(U,U)))><L,U><S,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ a
                   @ b
                   (m1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                            GHC.Types.IO a)
                   (k :: Control.Monad.Trans.Resource.Internal.ResourceT
                           GHC.Types.IO b)
                   (r :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (m1
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <GHC.Types.IO>_R <a>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <a>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 (k `cast`
                  (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                       <GHC.Types.IO>_R <b>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <b>_R)
                   ipv })
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                 ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                         GHC.Types.IO b>_R
                 ->_R (<GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <b>_R)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                        <GHC.Types.IO>_R <b>_N)) -}
7a7df91df932742872a360cb0395d403
  $s$fMonadResourceResourceT ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       NGLess.NGError.NGLessIO)
                  Interpretation.FastQ.$s$fMonadIOResourceT
                  (\ @ a
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (eta1 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   let {
                     eta2 :: GHC.Types.IO a
                     = eta
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <GHC.Types.IO>_R <a>_N)
                         eta1
                   } in
                   (\ (ds :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    eta2)
                     `cast`
                   (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                             <GHC.Types.IO>_R
                             <a>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <a>_N))
                    `cast`
                  (forall (a :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <NGLess.NGError.NGLessIO>_R <a>_N)) -}
82aeaaccc679951af9379788bace5d27
  $s$fMonadResourceResourceT1 ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Interpretation.FastQ.$s$fMonadIOResourceT1
                  (\ @ a
                     (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                               GHC.Types.IO a)
                     (eta1 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   eta
                     `cast`
                   (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                        <GHC.Types.IO>_R <a>_N)
                     eta1)
                    `cast`
                  (forall (a :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 <GHC.Types.IO>_R <a>_N)) -}
46c96893560b4e63f8b064575c5feaa8
  $s$fMonadResourceResourceT3 ::
    Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
    -> GHC.IORef.IORef Control.Monad.Trans.Resource.Internal.ReleaseMap
    -> GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U)><L,U>,
     Unfolding: InlineRule (2, True, True)
                (\ @ a
                   (eta :: Control.Monad.Trans.Resource.Internal.ResourceT
                             GHC.Types.IO a)
                   (eta1 :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                 eta
                   `cast`
                 (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                      <GHC.Types.IO>_R <a>_N)
                   eta1) -}
7c56d7a4e1db601969a6ff856b44e8d3
  $s$fMonadThrowResourceT ::
    Control.Monad.Catch.MonadThrow
      (Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       NGLess.NGError.NGLessIO)
                  Interpretation.FastQ.$s$fMonadIOResourceT_$s$fMonadResourceT
                  (\ @ e @ a (eta :: GHC.Exception.Type.Exception e) (x :: e) ->
                   let {
                     x1 :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 2, Strictness: <L,U><L,U>x -}
                     = \ (eta1 :: GHC.IORef.IORef
                                    Control.Monad.Trans.Resource.Internal.ReleaseMap)
                         (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       GHC.IO.throwIO1 @ e @ a eta x eta2
                   } in
                   (\ (ds :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x1)
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R (<GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <a>_R)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                             <GHC.Types.IO>_R
                                                             <a>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <a>_N)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                                                            <NGLess.NGError.NGLessIO>_R
                                                                                                                            <a>_N))) -}
29f23f82a187c31a1e67ce98475dcac9
  $s$fMonadThrowResourceT1 ::
    Control.Monad.Catch.MonadThrow
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Interpretation.FastQ.$s$fMonadIOResourceT_$s$fMonadResourceT1
                  (\ @ e @ a (eta :: GHC.Exception.Type.Exception e) (x :: e) ->
                   let {
                     x1 :: GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 1, Strictness: <L,U>x -}
                     = GHC.IO.throwIO1 @ e @ a eta x
                   } in
                   (\ (ds :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x1)
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <a>_R)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                      <GHC.Types.IO>_R <a>_N))) -}
b5e458d308144c31d121179247fa7e77
  $s$fMonadThrowResourceT_$cthrowM ::
    GHC.Exception.Type.Exception e =>
    e
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <B,1*U(A,A,1*C1(U),A,A)><B,U><B,A><B,A><B,U>x,
     Unfolding: InlineRule (1, True, False)
                (\ @ e @ a (eta :: GHC.Exception.Type.Exception e) (x :: e) ->
                 let {
                   x1 :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap
                         -> GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                     {- Arity: 2, Strictness: <L,U><L,U>x -}
                   = \ (eta1 :: GHC.IORef.IORef
                                  Control.Monad.Trans.Resource.Internal.ReleaseMap)
                       (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                     GHC.IO.throwIO1 @ e @ a eta x eta2
                 } in
                 (\ (ds :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  x1)
                   `cast`
                 ((<GHC.IORef.IORef
                      Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                   ->_R (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <a>_R)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                           <GHC.Types.IO>_R
                                                           <a>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <a>_N)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                                                          <NGLess.NGError.NGLessIO>_R
                                                                                                                          <a>_N))) -}
6fe3dae4e3521f18c373840142f9691f
  $s$fMonadThrowResourceT_$cthrowM1 ::
    GHC.Exception.Type.Exception e =>
    e -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <B,1*U(A,A,1*C1(U),A,A)><B,U><B,A><B,U>x,
     Unfolding: InlineRule (1, True, False)
                (\ @ e @ a (eta :: GHC.Exception.Type.Exception e) (x :: e) ->
                 let {
                   x1 :: GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                     {- Arity: 1, Strictness: <L,U>x -}
                   = GHC.IO.throwIO1 @ e @ a eta x
                 } in
                 (\ (ds :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  x1)
                   `cast`
                 ((<GHC.IORef.IORef
                      Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <a>_R)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                    <GHC.Types.IO>_R <a>_N))) -}
157141bf989fa9ce74d159c4252f4f29
  $s$fMonadUnliftIOResourceT1 ::
    Control.Monad.IO.Unlift.MonadUnliftIO
      (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)
                  Interpretation.FastQ.$s$fMonadIOResourceT1
                  (Control.Monad.Trans.Resource.Internal.$fMonadUnliftIOResourceT1
                     @ GHC.Types.IO
                     Control.Monad.IO.Unlift.$fMonadUnliftIOIO)
                    `cast`
                  (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <GHC.Types.IO>_R
                            <Control.Monad.IO.Unlift.UnliftIO
                               (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)>_N))
                  Interpretation.FastQ.$s$fMonadUnliftIOResourceT_$s$fMonadUnliftIOResourceT_$cwithRunInIO1 -}
a88060174a57e15d1ff4f18dcf1a9fde
  $s$fMonadUnliftIOResourceT_$s$fMonadUnliftIOResourceT_$cwithRunInIO ::
    ((forall a.
      Control.Monad.Trans.Resource.Internal.ResourceT
        NGLess.NGError.NGLessIO a
      -> GHC.Types.IO a)
     -> GHC.Types.IO b)
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         NGLess.NGError.NGLessIO b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S)),1*C1(C1(U(U,U)))><L,U><L,U><S,U>,
     Inline: (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ b
                   (ds :: (forall a.
                           Control.Monad.Trans.Resource.Internal.ResourceT
                             NGLess.NGError.NGLessIO a
                           -> GHC.Types.IO a)
                          -> GHC.Types.IO b)
                   (r :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                 let {
                   ds1 :: NGLess.NGError.NGLessIO
                            (Control.Monad.IO.Unlift.UnliftIO
                               (Control.Monad.Trans.Resource.Internal.ResourceT
                                  NGLess.NGError.NGLessIO))
                   = Control.Monad.Trans.Resource.Internal.$fMonadUnliftIOResourceT1
                       @ NGLess.NGError.NGLessIO
                       NGLess.NGError.$fMonadUnliftIONGLessIO
                       r
                 } in
                 (\ (r1 :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  case (ds1
                          `cast`
                        (NGLess.NGError.N:NGLessIO[0] <Control.Monad.IO.Unlift.UnliftIO
                                                         (Control.Monad.Trans.Resource.Internal.ResourceT
                                                            NGLess.NGError.NGLessIO)>_N ; Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                              <GHC.Types.IO>_R
                                                                                              <Control.Monad.IO.Unlift.UnliftIO
                                                                                                 (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                                    NGLess.NGError.NGLessIO)>_N)
                          r1)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <Control.Monad.IO.Unlift.UnliftIO
                               (Control.Monad.Trans.Resource.Internal.ResourceT
                                  NGLess.NGError.NGLessIO)>_R)
                         s of ds2 { (#,#) ipv ipv1 ->
                  (ds
                     ipv1
                       `cast`
                     (Control.Monad.IO.Unlift.N:UnliftIO[0]
                          <Control.Monad.Trans.Resource.Internal.ResourceT
                             NGLess.NGError.NGLessIO>_R))
                    `cast`
                  (GHC.Types.N:IO[0] <b>_R)
                    ipv })
                   `cast`
                 ((<GHC.IORef.IORef
                      Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <b>_R)) ; (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                     <GHC.Types.IO>_R
                                                     <b>_N) ; Sym (NGLess.NGError.N:NGLessIO[0]) <b>_N)))
                  `cast`
                (forall (b :: <*>_N).
                 <(forall a.
                   Control.Monad.Trans.Resource.Internal.ResourceT
                     NGLess.NGError.NGLessIO a
                   -> GHC.Types.IO a)
                  -> GHC.Types.IO b>_R
                 ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                               <NGLess.NGError.NGLessIO>_R <b>_N)) -}
c2ca14245f69432f63c39832cd069da5
  $s$fMonadUnliftIOResourceT_$s$fMonadUnliftIOResourceT_$cwithRunInIO1 ::
    ((forall a.
      Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
      -> GHC.Types.IO a)
     -> GHC.Types.IO b)
    -> Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(C(S)),1*C1(C1(U(U,U)))><L,U><S,U>,
     Inline: (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ b
                   (ds :: (forall a.
                           Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
                           -> GHC.Types.IO a)
                          -> GHC.Types.IO b)
                   (r :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (Control.Monad.Trans.Resource.Internal.$fMonadUnliftIOResourceT1
                         @ GHC.Types.IO
                         Control.Monad.IO.Unlift.$fMonadUnliftIOIO
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <Control.Monad.IO.Unlift.UnliftIO
                              (Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 (ds
                    ipv1
                      `cast`
                    (Control.Monad.IO.Unlift.N:UnliftIO[0]
                         <Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO>_R))
                   `cast`
                 (GHC.Types.N:IO[0] <b>_R)
                   ipv })
                  `cast`
                (forall (b :: <*>_N).
                 <(forall a.
                   Control.Monad.Trans.Resource.Internal.ResourceT GHC.Types.IO a
                   -> GHC.Types.IO a)
                  -> GHC.Types.IO b>_R
                 ->_R (<GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <b>_R)) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                        <GHC.Types.IO>_R <b>_N)) -}
3a24e95167384875781e3a564311e264
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Interpretation.FastQ.$trModule3
                   Interpretation.FastQ.$trModule1) -}
2591f3f80ef197991a6123cb212a4a9b
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Interpretation.FastQ.$trModule2) -}
92ae103475272930fcdb27ef327eb8cf
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Interpretation.FastQ"#) -}
6ca2c173b7566cb1542fe538baf026ef
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Interpretation.FastQ.$trModule4) -}
349f4a4cea705cf9acb370ab3d8e8cd8
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("NGLess-1.1.0-965Np14lOUvJ2rS9XGhph5"#) -}
30c2de82360e89b74d7cf4671374be4c
  $wexecuteShortReadsMethod ::
    Control.Monad.Error.Class.MonadError NGLess.NGError.NGError m =>
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.FastQ.ShortRead
    -> GHC.Maybe.Maybe Language.NGLessObject
    -> m Language.NGLessObject
  {- Arity: 6,
     Strictness: <L,U(1*U(A,A,A,C(U),A),1*C1(U),A)><L,U><L,U><S,U><L,U(U,U(U,U,U,U),U(U,U,U))><L,U>,
     Inline: [2] -}
2e8ee78224d46e3686f9434893ff4477
  encodingFor ::
    GHC.IO.FilePath -> NGLess.NGError.NGLessIO Data.FastQ.FastQEncoding
  {- Arity: 1, Strictness: <L,U> -}
666a5517128f7e5c02f10ca3acba9459
  executeFastq ::
    Language.NGLessObject
    -> NGLess.KwArgsValues
    -> NGLess.NGError.NGLessIO Language.NGLessObject
  {- Arity: 2, Strictness: <L,U><L,U> -}
ac918612539f54cb2279851c7f0fd37d
  executeGroup ::
    Language.NGLessObject
    -> NGLess.KwArgsValues
    -> NGLess.NGError.NGLessIO Language.NGLessObject
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
a3bc788e6c5d49b01a7811290599b44c
  executePaired ::
    Language.NGLessObject
    -> NGLess.KwArgsValues
    -> NGLess.NGError.NGLessIO Language.NGLessObject
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
825e3c6c2454891efc8ac0cb1032f1fe
  executeShortReadsMethod ::
    Control.Monad.Error.Class.MonadError NGLess.NGError.NGError m =>
    Language.MethodName
    -> Data.FastQ.ShortRead
    -> GHC.Maybe.Maybe Language.NGLessObject
    -> p
    -> m Language.NGLessObject
  {- Arity: 5,
     Strictness: <L,U(U(A,A,A,C(U),A),C(U),A)><S(SSS),1*U(U,U,U)><L,U(U,U(U,U,U,U),U(U,U,U))><L,U><L,A>,
     Inline: [2],
     Unfolding: InlineRule (5, True, False)
                (\ @ m :: * -> *
                   @ p
                   (w :: Control.Monad.Error.Class.MonadError
                           NGLess.NGError.NGError m)
                   (w1 :: Language.MethodName)
                   (w2 :: Data.FastQ.ShortRead)
                   (w3 :: GHC.Maybe.Maybe Language.NGLessObject)
                   (w4 :: p) ->
                 case w1
                        `cast`
                      (Language.N:MethodName[0]) of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 Interpretation.FastQ.$wexecuteShortReadsMethod
                   @ m
                   @ p
                   w
                   ww1
                   ww2
                   ww3
                   w2
                   w3 }) -}
"SPEC/Interpretation.FastQ $fApplicativeResourceT @ IO" [orphan] forall (v :: GHC.Base.Applicative
                                                                                GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT @ GHC.Types.IO
                                                               v
  = Interpretation.FastQ.$s$fApplicativeResourceT
"SPEC/Interpretation.FastQ $fApplicativeResourceT @ NGLessIO" [orphan] forall (v :: GHC.Base.Applicative
                                                                                      NGLess.NGError.NGLessIO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT @ NGLess.NGError.NGLessIO
                                                               v
  = Interpretation.FastQ.$s$fApplicativeResourceT1
"SPEC/Interpretation.FastQ $fApplicativeResourceT_$cpure @ IO" [orphan] forall ($dApplicative :: GHC.Base.Applicative
                                                                                                   GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$cpure @ GHC.Types.IO
                                                                      $dApplicative
  = Interpretation.FastQ.$s$fApplicativeResourceT_$cpure
"SPEC/Interpretation.FastQ $fApplicativeResourceT_$cpure @ NGLessIO" [orphan] forall ($dApplicative :: GHC.Base.Applicative
                                                                                                         NGLess.NGError.NGLessIO)
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$cpure @ NGLess.NGError.NGLessIO
                                                                      $dApplicative
  = Interpretation.FastQ.$s$fApplicativeResourceT_$cpure1
"SPEC/Interpretation.FastQ $fFunctorResourceT @ IO" [orphan] forall (v :: GHC.Base.Functor
                                                                            GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fFunctorResourceT @ GHC.Types.IO
                                                           v
  = Interpretation.FastQ.$s$fApplicativeResourceT_$s$fFunctorResourceT
"SPEC/Interpretation.FastQ $fFunctorResourceT @ NGLessIO" [orphan] forall (v :: GHC.Base.Functor
                                                                                  NGLess.NGError.NGLessIO)
  Control.Monad.Trans.Resource.Internal.$fFunctorResourceT @ NGLess.NGError.NGLessIO
                                                           v
  = Interpretation.FastQ.$s$fApplicativeResourceT_$s$fFunctorResourceT1
"SPEC/Interpretation.FastQ $fMonadIOResourceT @ IO" [orphan] forall (v :: Control.Monad.IO.Class.MonadIO
                                                                            GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT @ GHC.Types.IO
                                                           v
  = Interpretation.FastQ.$s$fMonadIOResourceT1
"SPEC/Interpretation.FastQ $fMonadIOResourceT @ NGLessIO" [orphan] forall (v :: Control.Monad.IO.Class.MonadIO
                                                                                  NGLess.NGError.NGLessIO)
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT @ NGLess.NGError.NGLessIO
                                                           v
  = Interpretation.FastQ.$s$fMonadIOResourceT
"SPEC/Interpretation.FastQ $fMonadResourceResourceT @ IO" [orphan] forall (v :: Control.Monad.IO.Class.MonadIO
                                                                                  GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT @ GHC.Types.IO
                                                                 v
  = Interpretation.FastQ.$s$fMonadResourceResourceT1
"SPEC/Interpretation.FastQ $fMonadResourceResourceT @ NGLessIO" [orphan] forall (v :: Control.Monad.IO.Class.MonadIO
                                                                                        NGLess.NGError.NGLessIO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT @ NGLess.NGError.NGLessIO
                                                                 v
  = Interpretation.FastQ.$s$fMonadResourceResourceT
"SPEC/Interpretation.FastQ $fMonadResourceResourceT1 @ IO" [orphan] forall ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                           GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceResourceT1 @ GHC.Types.IO
                                                                  $dMonadIO
  = Interpretation.FastQ.$s$fMonadResourceResourceT3
"SPEC/Interpretation.FastQ $fMonadResourceT @ IO" [orphan] forall (v :: GHC.Base.Monad
                                                                          GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT @ GHC.Types.IO
                                                         v
  = Interpretation.FastQ.$s$fMonadIOResourceT_$s$fMonadResourceT1
"SPEC/Interpretation.FastQ $fMonadResourceT @ NGLessIO" [orphan] forall (v :: GHC.Base.Monad
                                                                                NGLess.NGError.NGLessIO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT @ NGLess.NGError.NGLessIO
                                                         v
  = Interpretation.FastQ.$s$fMonadIOResourceT_$s$fMonadResourceT
"SPEC/Interpretation.FastQ $fMonadResourceT_$c>> @ IO" [orphan] forall ($dMonad :: GHC.Base.Monad
                                                                                     GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$c>> @ GHC.Types.IO
                                                              $dMonad
  = Interpretation.FastQ.$s$fMonadIOResourceT_$s$fMonadResourceT_$c>>1
"SPEC/Interpretation.FastQ $fMonadResourceT_$c>> @ NGLessIO" [orphan] forall ($dMonad :: GHC.Base.Monad
                                                                                           NGLess.NGError.NGLessIO)
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$c>> @ NGLess.NGError.NGLessIO
                                                              $dMonad
  = Interpretation.FastQ.$s$fMonadIOResourceT_$s$fMonadResourceT_$c>>
"SPEC/Interpretation.FastQ $fMonadThrowResourceT @ IO" [orphan] forall (v :: Control.Monad.Catch.MonadThrow
                                                                               GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadThrowResourceT @ GHC.Types.IO
                                                              v
  = Interpretation.FastQ.$s$fMonadThrowResourceT1
"SPEC/Interpretation.FastQ $fMonadThrowResourceT @ NGLessIO" [orphan] forall (v :: Control.Monad.Catch.MonadThrow
                                                                                     NGLess.NGError.NGLessIO)
  Control.Monad.Trans.Resource.Internal.$fMonadThrowResourceT @ NGLess.NGError.NGLessIO
                                                              v
  = Interpretation.FastQ.$s$fMonadThrowResourceT
"SPEC/Interpretation.FastQ $fMonadThrowResourceT_$cthrowM @ IO" [orphan] forall ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                   GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadThrowResourceT_$cthrowM @ GHC.Types.IO
                                                                       $dMonadThrow
  = Interpretation.FastQ.$s$fMonadThrowResourceT_$cthrowM1
"SPEC/Interpretation.FastQ $fMonadThrowResourceT_$cthrowM @ NGLessIO" [orphan] forall ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                         NGLess.NGError.NGLessIO)
  Control.Monad.Trans.Resource.Internal.$fMonadThrowResourceT_$cthrowM @ NGLess.NGError.NGLessIO
                                                                       $dMonadThrow
  = Interpretation.FastQ.$s$fMonadThrowResourceT_$cthrowM
"SPEC/Interpretation.FastQ $fMonadUnliftIOResourceT @ IO" [orphan] forall (v :: Control.Monad.IO.Unlift.MonadUnliftIO
                                                                                  GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadUnliftIOResourceT @ GHC.Types.IO
                                                                 v
  = Interpretation.FastQ.$s$fMonadUnliftIOResourceT1
"SPEC/Interpretation.FastQ $fMonadUnliftIOResourceT_$cwithRunInIO @ IO" [orphan] forall ($dMonadUnliftIO :: Control.Monad.IO.Unlift.MonadUnliftIO
                                                                                                              GHC.Types.IO)
  Control.Monad.Trans.Resource.Internal.$fMonadUnliftIOResourceT_$cwithRunInIO @ GHC.Types.IO
                                                                               $dMonadUnliftIO
  = Interpretation.FastQ.$s$fMonadUnliftIOResourceT_$s$fMonadUnliftIOResourceT_$cwithRunInIO1
"SPEC/Interpretation.FastQ $fMonadUnliftIOResourceT_$cwithRunInIO @ NGLessIO" [orphan] forall ($dMonadUnliftIO :: Control.Monad.IO.Unlift.MonadUnliftIO
                                                                                                                    NGLess.NGError.NGLessIO)
  Control.Monad.Trans.Resource.Internal.$fMonadUnliftIOResourceT_$cwithRunInIO @ NGLess.NGError.NGLessIO
                                                                               $dMonadUnliftIO
  = Interpretation.FastQ.$s$fMonadUnliftIOResourceT_$s$fMonadUnliftIOResourceT_$cwithRunInIO
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

