
==================== FINAL INTERFACE ====================
2020-02-24 04:15:02.081127545 UTC

interface NGLess-1.1.0-965Np14lOUvJ2rS9XGhph5:NGLess 8065
  interface hash: 3becc155a082b62afafe4ee9b10d4813
  ABI hash: a5aa819ac1d32c5f90c4109da4ddd56b
  export-list hash: c338d02d81e70b5020d9e8bfbcb7ea8c
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: af0c445c587eaa59b2143ec7cebee05f
  opt_hash: 9851e58a0ec35d0fd39c07cdbeb6257b
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  NGLess.boolOrTypeError
  NGLess.decodeSymbolOrError
  NGLess.integerOrTypeError
  NGLess.lookupBoolOrScriptError
  NGLess.lookupBoolOrScriptErrorDef
  NGLess.lookupIntegerOrScriptError
  NGLess.lookupIntegerOrScriptErrorDef
  NGLess.lookupStringListOrScriptError
  NGLess.lookupStringListOrScriptErrorDef
  NGLess.lookupStringOrScriptError
  NGLess.lookupStringOrScriptErrorDef
  NGLess.lookupSymbolListOrScriptError
  NGLess.lookupSymbolListOrScriptErrorDef
  NGLess.lookupSymbolOrScriptError
  NGLess.lookupSymbolOrScriptErrorDef
  NGLess.stringOrTypeError
  NGLess.symbolOrTypeError
  NGLess.NGError.runNGLess
  NGLess.NGError.testNGLessIO
  NGLess.NGError.throwDataError
  NGLess.NGError.throwGenericError
  NGLess.NGError.throwScriptError
  NGLess.NGError.throwShouldNotOccur
  NGLess.NGError.throwSystemError
  NGLess.KwArgsValues
  NGLess.NGError.NGError{NGLess.NGError.NGError}
  NGLess.NGError.NGLess
  NGLess.NGError.NGLessIO
module dependencies: CmdArgs Configuration Data.FastQ Data.Sam
                     Dependencies.Embedded FileManagement FileOrStream Language
                     NGLess.NGError NGLess.NGLEnvironment Output Paths_NGLess
                     Utils.Conduit Utils.LockFile Utils.Samtools Utils.Suggestion
                     Utils.Utils Utils.Vector Version
package dependencies: JuicyPixels-3.3.4 MissingH-1.4.1.0
                      StateVar-1.2 active-0.2.0.14 adjunctions-4.4 aeson-1.4.6.0
                      ansi-terminal-0.9.1 ansi-wl-pprint-0.6.9 array-0.5.3.0 async-2.2.2
                      attoparsec-0.13.2.3 base-4.12.0.0 base-compat-0.10.5
                      base-orphans-0.8.1 base64-bytestring-1.0.0.2 bifunctors-5.5.6
                      binary-0.8.6.0 blaze-builder-0.4.1.0 bytes-0.15.5
                      bytestring-0.10.8.2 bzlib-conduit-0.3.0.2 call-stack-0.1.0
                      cereal-0.5.8.1 cereal-conduit-0.8.0 charset-0.3.7.1 colour-2.3.5
                      comonad-5.0.6 conduit-1.3.1.2 conduit-algorithms-0.0.11.0
                      conduit-extra-1.3.4 conduit-zstd-0.0.1.1 configurator-0.3.0.0
                      containers-0.6.0.1 contravariant-1.5.2 convertible-1.1.1.0
                      data-default-class-0.1.2.0 deepseq-1.4.4.0 diagrams-core-1.4.2
                      diagrams-lib-1.4.3 diagrams-solve-0.1.1 diagrams-svg-1.4.3
                      directory-1.3.3.0 distributive-0.6.1 dlist-0.8.0.7
                      dual-tree-0.2.2.1 edit-distance-0.2.2.1 errors-2.3.0
                      exceptions-0.10.4 extra-1.6.18 file-embed-0.0.11.1 filepath-1.4.2.1
                      fingertree-0.1.4.2 free-5.1.3 ghc-boot-th-8.6.5 ghc-prim-0.5.3
                      gitrev-1.3.1 hashable-1.2.7.0 hostname-1.0 inline-c-0.7.0.1
                      integer-gmp-1.0.2.0 integer-logarithms-1.0.3 intervals-0.8.1
                      kan-extensions-5.2 lens-4.17.1 linear-1.20.9 lzma-0.0.0.3
                      lzma-conduit-1.2.1 monad-loops-0.4.3 mono-traversable-1.0.15.1
                      monoid-extras-0.5.1 mtl-2.2.2 newtype-generics-0.5.4
                      old-locale-1.0.0.7 old-time-1.1.0.3 optparse-applicative-0.14.3.0
                      parsec-3.1.14.0 parsers-0.12.10 pretty-1.1.3.6 primitive-0.6.4.0
                      process-1.6.5.0 profunctors-5.3 random-1.1 reflection-2.1.5
                      regex-1.0.2.0 regex-base-0.93.2 regex-compat-0.95.1
                      regex-pcre-builtin-0.94.5.8.8.35 regex-posix-0.95.2
                      regex-tdfa-1.2.3.2 regex-tdfa-text-1.0.0.3 resourcet-1.2.2
                      safe-0.3.18 safeio-0.0.5.0 scientific-0.3.6.2 semigroupoids-5.3.4
                      split-0.2.3.3 stm-2.5.0.0 stm-chans-3.0.0.4 stm-conduit-4.0.1
                      streaming-commons-0.2.1.1 strict-0.3.2 svg-builder-0.1.1
                      tagged-0.8.6 tar-0.5.1.1 template-haskell-2.14.0.0 text-1.2.3.1
                      th-abstraction-0.3.1.0 time-1.8.0.2 time-compat-1.9.2.2
                      time-locale-compat-0.1.1.5 transformers-0.5.6.2
                      transformers-base-0.4.5.2 transformers-compat-0.6.5 unix-2.7.2.2
                      unix-compat-0.5.2 unliftio-0.2.12 unliftio-core-0.1.2.0
                      unordered-containers-0.2.10.0 utf8-string-1.0.1.1 uuid-types-1.0.3
                      vector-0.12.0.3 vector-algorithms-0.8.0.3 zlib-0.6.2.1 zstd-0.1.1.2
orphans: conduit-extra-1.3.4:Data.Conduit.Process
         regex-1.0.2.0:Text.RE.TDFA.String
         regex-tdfa-text-1.0.0.3:Text.Regex.TDFA.Text
         regex-tdfa-text-1.0.0.3:Text.Regex.TDFA.Text.Lazy
         regex-pcre-builtin-0.94.5.8.8.35:Text.Regex.PCRE.String
         regex-pcre-builtin-0.94.5.8.8.35:Text.Regex.PCRE.Sequence
         regex-pcre-builtin-0.94.5.8.8.35:Text.Regex.PCRE.ByteString.Lazy
         regex-pcre-builtin-0.94.5.8.8.35:Text.Regex.PCRE.ByteString
         regex-tdfa-1.2.3.2:Text.Regex.TDFA.ByteString
         regex-tdfa-1.2.3.2:Text.Regex.TDFA.ByteString.Lazy
         regex-tdfa-1.2.3.2:Text.Regex.TDFA.Sequence
         regex-tdfa-1.2.3.2:Text.Regex.TDFA.String
         regex-posix-0.95.2:Text.Regex.Posix.String
         regex-posix-0.95.2:Text.Regex.Posix.Sequence
         regex-posix-0.95.2:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2:Text.Regex.Posix.ByteString
         regex-base-0.93.2:Text.Regex.Base.Context
         convertible-1.1.1.0:Data.Convertible.Instances.C
         convertible-1.1.1.0:Data.Convertible.Instances.Map
         convertible-1.1.1.0:Data.Convertible.Instances.Text
         convertible-1.1.1.0:Data.Convertible.Instances.Time
         convertible-1.1.1.0:Data.Convertible.Instances.Num
         attoparsec-0.13.2.3:Data.Attoparsec.ByteString.Char8
         diagrams-lib-1.4.3:Diagrams.Animation.Active
         diagrams-lib-1.4.3:Diagrams.TwoD.Path
         diagrams-lib-1.4.3:Diagrams.TwoD.Segment
         diagrams-lib-1.4.3:Diagrams.Trail
         diagrams-lib-1.4.3:Diagrams.ThreeD.Types
         diagrams-lib-1.4.3:Diagrams.TwoD.Types
         diagrams-core-1.4.2:Diagrams.Core.Types
         monoid-extras-0.5.1:Data.Monoid.MList
         diagrams-core-1.4.2:Diagrams.Core.Points
         time-1.8.0.2:Data.Time.Clock.TAI reflection-2.1.5:Data.Reflection
         linear-1.20.9:Linear.Instances vector-0.12.0.3:Data.Vector.Unboxed
         vector-0.12.0.3:Data.Vector.Fusion.Bundle
         configurator-0.3.0.0:Data.Configurator.Instances
         attoparsec-0.13.2.3:Data.Attoparsec.Text.Internal
         colour-2.3.5:Data.Colour hashable-1.2.7.0:Data.Hashable.Generic
         text-1.2.3.1:Data.Text.Lazy stm-2.5.0.0:Control.Monad.STM
         transformers-0.5.6.2:Control.Monad.Trans.Error
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: JuicyPixels-3.3.4:Codec.Picture.Tga
                         JuicyPixels-3.3.4:Codec.Picture.Tiff
                         JuicyPixels-3.3.4:Codec.Picture.Types
                         NGLess-1.1.0-965Np14lOUvJ2rS9XGhph5:NGLess.NGError
                         active-0.2.0.14:Data.Active adjunctions-4.4:Data.Functor.Rep
                         aeson-1.4.6.0:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.3:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         bifunctors-5.5.6:Data.Bifunctor.Biff
                         bifunctors-5.5.6:Data.Bifunctor.Clown
                         bifunctors-5.5.6:Data.Bifunctor.Fix
                         bifunctors-5.5.6:Data.Bifunctor.Flip
                         bifunctors-5.5.6:Data.Bifunctor.Join
                         bifunctors-5.5.6:Data.Bifunctor.Joker
                         bifunctors-5.5.6:Data.Bifunctor.Product
                         bifunctors-5.5.6:Data.Bifunctor.Sum
                         bifunctors-5.5.6:Data.Bifunctor.Tannen
                         bifunctors-5.5.6:Data.Bifunctor.Wrapped bytes-0.15.5:Data.Bytes.Get
                         bytes-0.15.5:Data.Bytes.Signed bytes-0.15.5:Data.Bytes.VarInt
                         conduit-1.3.1.2:Data.Conduit.Internal.Conduit
                         conduit-1.3.1.2:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         diagrams-core-1.4.2:Diagrams.Core.Envelope
                         diagrams-core-1.4.2:Diagrams.Core.Measure
                         diagrams-core-1.4.2:Diagrams.Core.Names
                         diagrams-core-1.4.2:Diagrams.Core.Points
                         diagrams-core-1.4.2:Diagrams.Core.Query
                         diagrams-core-1.4.2:Diagrams.Core.Style
                         diagrams-core-1.4.2:Diagrams.Core.Trace
                         diagrams-core-1.4.2:Diagrams.Core.Transform
                         diagrams-core-1.4.2:Diagrams.Core.Types
                         diagrams-core-1.4.2:Diagrams.Core.V
                         diagrams-lib-1.4.3:Diagrams.Angle
                         diagrams-lib-1.4.3:Diagrams.Animation.Active
                         diagrams-lib-1.4.3:Diagrams.BoundingBox
                         diagrams-lib-1.4.3:Diagrams.Coordinates
                         diagrams-lib-1.4.3:Diagrams.Direction
                         diagrams-lib-1.4.3:Diagrams.Located
                         diagrams-lib-1.4.3:Diagrams.Path
                         diagrams-lib-1.4.3:Diagrams.Segment
                         diagrams-lib-1.4.3:Diagrams.Size
                         diagrams-lib-1.4.3:Diagrams.Tangent
                         diagrams-lib-1.4.3:Diagrams.ThreeD.Camera
                         diagrams-lib-1.4.3:Diagrams.ThreeD.Light
                         diagrams-lib-1.4.3:Diagrams.ThreeD.Shapes
                         diagrams-lib-1.4.3:Diagrams.ThreeD.Types
                         diagrams-lib-1.4.3:Diagrams.Trail
                         diagrams-lib-1.4.3:Diagrams.TwoD.Attributes
                         diagrams-lib-1.4.3:Diagrams.TwoD.Image
                         diagrams-lib-1.4.3:Diagrams.TwoD.Path
                         diagrams-lib-1.4.3:Diagrams.TwoD.Segment.Bernstein
                         diagrams-lib-1.4.3:Diagrams.TwoD.Text
                         diagrams-lib-1.4.3:Diagrams.TwoD.Types
                         diagrams-svg-1.4.3:Diagrams.Backend.SVG dlist-0.8.0.7:Data.DList
                         dual-tree-0.2.2.1:Data.Tree.DUAL.Internal
                         fingertree-0.1.4.2:Data.FingerTree
                         free-5.1.3:Control.Comonad.Cofree
                         free-5.1.3:Control.Comonad.Trans.Cofree
                         free-5.1.3:Control.Monad.Free free-5.1.3:Control.Monad.Trans.Free
                         ghc-boot-th-8.6.5:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.5:GHC.LanguageExtensions.Type
                         inline-c-0.7.0.1:Language.C.Inline
                         inline-c-0.7.0.1:Language.C.Inline.Context
                         intervals-0.8.1:Numeric.Interval.Kaucher
                         kan-extensions-5.2:Data.Functor.Day
                         kan-extensions-5.2:Data.Functor.Yoneda lens-4.17.1:Control.Lens.At
                         lens-4.17.1:Control.Lens.Internal.Indexed
                         lens-4.17.1:Control.Lens.Reified lens-4.17.1:Control.Lens.Tuple
                         lens-4.17.1:Control.Lens.Wrapped lens-4.17.1:Control.Lens.Zoom
                         linear-1.20.9:Linear.Affine linear-1.20.9:Linear.Plucker
                         linear-1.20.9:Linear.Quaternion linear-1.20.9:Linear.V
                         linear-1.20.9:Linear.V0 linear-1.20.9:Linear.V1
                         linear-1.20.9:Linear.V2 linear-1.20.9:Linear.V3
                         linear-1.20.9:Linear.V4
                         mono-traversable-1.0.15.1:Data.MonoTraversable
                         mono-traversable-1.0.15.1:Data.NonNull
                         mono-traversable-1.0.15.1:Data.Sequences
                         newtype-generics-0.5.4:Control.Newtype.Generics
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         profunctors-5.3:Data.Profunctor.Composition
                         profunctors-5.3:Data.Profunctor.Rep
                         regex-1.0.2.0:Text.RE.ZeInternals.NamedCaptures
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         stm-conduit-4.0.1:Data.Conduit.Async.Composition
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         th-abstraction-0.3.1.0:Language.Haskell.TH.Datatype
                         unliftio-0.2.12:UnliftIO.Internals.Async
                         unordered-containers-0.2.10.0:Data.HashMap.Base
                         unordered-containers-0.2.10.0:Data.HashSet.Base
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.3:Data.Vector vector-0.12.0.3:Data.Vector.Primitive
                         vector-0.12.0.3:Data.Vector.Storable
                         vector-0.12.0.3:Data.Vector.Unboxed
                         vector-0.12.0.3:Data.Vector.Unboxed.Base
                         zlib-0.6.2.1:Codec.Compression.Zlib.Stream
import  -/  Language 93f0f50a5c7ee77231d71d6a98e7a8ca
  exports: 6aa5d24204c11e6b2a36767cd645b21f
  NGLessObject ea18243860934472078c5e2ccd0edf40
  NGOBool 2a62e05620187a04f1c1263076dd368f
  NGOInteger 395b0ce4eb20fbcf334f84acb2d7ff1d
  NGOList 488dd32aa90ff5894de15c18619c34df
  NGOString 155e4815cffdc2c6617b34a2d52b7659
  NGOSymbol 8912a0dc0eeb07d7a07e311be194dbf1
import  -/  NGLess.NGError 9175c652eec68d1a195f3eb2d7471cb5
  exports: 500bdef9411bf7c9c4e288fc5b605d1e
  NGError a376f3cfcfb76b5fb7a76f3cdc4bd9d1
  NGError 9741b2ef5fc8e673ccaf43057baf92e8
  NGLess 416e5726ee4c4987c25367d545064990
  NGLessIO f1fd902a0de985a61e8d9110730dfc21
  runNGLess a41ed825730df1edb93a7b2b931843fe
  testNGLessIO e89cbb9187081d3497a1914ba53cbd6b
  throwDataError c062fbeafb6afe5ad95562e1e7cbc6a7
  throwGenericError 5fdddf54553b39a6f2f62e1658de6acb
  throwScriptError 96adea1584aa4db243e08c54da5ff3c3
  throwShouldNotOccur 6b0f4fcf8b2bcdc53931daab853fb839
  throwSystemError fd7c6796a005f4e332b2d16e13db3f7f
import  -/  Utils.Suggestion 559e2395dd1103e80283d24b7e6fd048
  exports: cc5fd4d32efb666b1cbe2686b5c39e5e
  suggestionMessage b2d3103f67fb55a2ce0dbda236c2c9b9
import  -/  base-4.12.0.0:Data.Foldable efb37371da929e7bc88d896298d2d979
import  -/  base-4.12.0.0:Data.Functor 069b2025a03e32fd228e74a86a58a075
import  -/  base-4.12.0.0:Data.Traversable d2c09bff1e4f0c871306c3ff8aa4dc36
import  -/  base-4.12.0.0:Data.Tuple c719fc29608fe81c10bee9a1bf1e05ff
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.List 4014a3c8a3b7c31c8325f6bcf1feea4a
import  -/  base-4.12.0.0:GHC.Show 838a5d039379d82d9626aae53dfce276
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  integer-gmp-1.0.2.0:GHC.Integer.Type 6d87087aea24143d2650f78480d954a3
import  -/  mtl-2.2.2:Control.Monad.Error.Class 05ce857e0a8037d899cd3dba2eda1f68
import  -/  mtl-2.2.2:Control.Monad.Except 5ca04d82f027e75c6a16c1ed916c1305
import  -/  text-1.2.3.1:Data.Text e31b81fb349ec0694c028af9d897c500
import  -/  text-1.2.3.1:Data.Text.Internal 537e168590e8068f673f691833f78483
import  -/  text-1.2.3.1:Data.Text.Show b788b7edd0f190b1a7c4f4aba0e35f18
8b7955ba7fccb329354d8624fc4762b9
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   NGLess.$trModule3
                   NGLess.$trModule1) -}
652430be08628de3f2cfa111fb1082ba
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS NGLess.$trModule2) -}
d14eacee5c0533fee4a307ffc0bace3a
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("NGLess"#) -}
9e43c65e9c8fb10326b62ac372970d4a
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS NGLess.$trModule4) -}
059b56925fee85b7652698d43f72605b
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("NGLess-1.1.0-965Np14lOUvJ2rS9XGhph5"#) -}
55a8868e532b3a736df11cdd2cbd4c07
  $wboolOrTypeError ::
    GHC.Base.Monad m =>
    (forall a. NGLess.NGError.NGError -> m a)
    -> GHC.Base.String -> Language.NGLessObject -> m GHC.Types.Bool
  {- Arity: 4,
     Strictness: <L,1*U(A,A,A,1*C1(U),A)><L,1*C1(U)><L,1*U><S,1*U>,
     Inline: [2],
     Unfolding: (\ @ m :: * -> *
                   (ww :: GHC.Base.Monad m)
                   (ww1 :: forall a. NGLess.NGError.NGError -> m a)
                   (w :: GHC.Base.String)
                   (w1 :: Language.NGLessObject) ->
                 case w1 of wild {
                   DEFAULT
                   -> ww1
                        @ GHC.Types.Bool
                        (case GHC.CString.unpackAppendCString#
                                "Expected a boolean (received "#
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   (Language.$fShowNGLessObject_$cshowsPrec
                                      (GHC.Types.I# 0#)
                                      wild
                                      (GHC.Types.[] @ GHC.Types.Char))
                                   (GHC.CString.unpackAppendCString#
                                      ") in context '"#
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         w
                                         (GHC.CString.unpackCString# "'"#)))) of dt { DEFAULT ->
                         NGLess.NGError.NGError NGLess.NGError.ScriptError dt })
                   Language.NGOBool b
                   -> GHC.Base.return @ m ww @ GHC.Types.Bool b }) -}
f36b145f96b6584d047bcc49e4b63a3e
  $wdecodeSymbolOrError ::
    GHC.Base.Monad m =>
    (forall a1. NGLess.NGError.NGError -> m a1)
    -> GHC.Base.String
    -> [(Data.Text.Internal.Text, a)]
    -> Data.Text.Internal.Text
    -> m a
  {- Arity: 5,
     Strictness: <L,1*U(A,A,A,1*C1(U),A)><L,1*C1(U)><L,1*U><S,U><L,U(U,U,U)>,
     Inline: [2] -}
f0aaab5a2a63a80a0034cb43fae1098a
  $wintegerOrTypeError ::
    GHC.Base.Monad m =>
    (forall a. NGLess.NGError.NGError -> m a)
    -> GHC.Base.String
    -> Language.NGLessObject
    -> m GHC.Integer.Type.Integer
  {- Arity: 4,
     Strictness: <L,1*U(A,A,A,1*C1(U),A)><L,1*C1(U)><L,1*U><S,1*U>,
     Inline: [2],
     Unfolding: (\ @ m :: * -> *
                   (ww :: GHC.Base.Monad m)
                   (ww1 :: forall a. NGLess.NGError.NGError -> m a)
                   (w :: GHC.Base.String)
                   (w1 :: Language.NGLessObject) ->
                 case w1 of wild {
                   DEFAULT
                   -> ww1
                        @ GHC.Integer.Type.Integer
                        (case GHC.CString.unpackAppendCString#
                                "Expected an integer (received "#
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   (Language.$fShowNGLessObject_$cshowsPrec
                                      (GHC.Types.I# 0#)
                                      wild
                                      (GHC.Types.[] @ GHC.Types.Char))
                                   (GHC.CString.unpackAppendCString#
                                      ") in context '"#
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         w
                                         (GHC.CString.unpackCString# "'"#)))) of dt { DEFAULT ->
                         NGLess.NGError.NGError NGLess.NGError.ScriptError dt })
                   Language.NGOInteger i
                   -> GHC.Base.return @ m ww @ GHC.Integer.Type.Integer i }) -}
d5f2607cd3058028ec97d8de99ab4b1d
  $wstringOrTypeError ::
    GHC.Base.Monad m =>
    (forall a. NGLess.NGError.NGError -> m a)
    -> GHC.Base.String
    -> Language.NGLessObject
    -> m Data.Text.Internal.Text
  {- Arity: 4,
     Strictness: <L,1*U(A,A,A,1*C1(U),A)><L,1*C1(U)><L,1*U><S,1*U>,
     Inline: [2],
     Unfolding: (\ @ m :: * -> *
                   (ww :: GHC.Base.Monad m)
                   (ww1 :: forall a. NGLess.NGError.NGError -> m a)
                   (w :: GHC.Base.String)
                   (w1 :: Language.NGLessObject) ->
                 case w1 of wild {
                   DEFAULT
                   -> ww1
                        @ Data.Text.Internal.Text
                        (case GHC.CString.unpackAppendCString#
                                "Expected a string (received "#
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   (Language.$fShowNGLessObject_$cshowsPrec
                                      (GHC.Types.I# 0#)
                                      wild
                                      (GHC.Types.[] @ GHC.Types.Char))
                                   (GHC.CString.unpackAppendCString#
                                      ") in context '"#
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         w
                                         (GHC.CString.unpackCString# "'"#)))) of dt { DEFAULT ->
                         NGLess.NGError.NGError NGLess.NGError.ScriptError dt })
                   Language.NGOString s
                   -> GHC.Base.return @ m ww @ Data.Text.Internal.Text s }) -}
ca53d24951102125df1451a24a97a6cd
  $wsymbolOrTypeError ::
    GHC.Base.Monad m =>
    (forall a. NGLess.NGError.NGError -> m a)
    -> GHC.Base.String
    -> Language.NGLessObject
    -> m Data.Text.Internal.Text
  {- Arity: 4,
     Strictness: <L,1*U(A,A,A,1*C1(U),A)><L,1*C1(U)><L,1*U><S,1*U>,
     Inline: [2],
     Unfolding: (\ @ m :: * -> *
                   (ww :: GHC.Base.Monad m)
                   (ww1 :: forall a. NGLess.NGError.NGError -> m a)
                   (w :: GHC.Base.String)
                   (w1 :: Language.NGLessObject) ->
                 case w1 of wild {
                   DEFAULT
                   -> ww1
                        @ Data.Text.Internal.Text
                        (case GHC.CString.unpackAppendCString#
                                "Expected a symbol (received "#
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   (Language.$fShowNGLessObject_$cshowsPrec
                                      (GHC.Types.I# 0#)
                                      wild
                                      (GHC.Types.[] @ GHC.Types.Char))
                                   (GHC.CString.unpackAppendCString#
                                      ") in context '"#
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         w
                                         (GHC.CString.unpackCString# "'"#)))) of dt { DEFAULT ->
                         NGLess.NGError.NGError NGLess.NGError.ScriptError dt })
                   Language.NGOSymbol s
                   -> GHC.Base.return @ m ww @ Data.Text.Internal.Text s }) -}
830496506778855ea845b2c49d2ab17b
  type KwArgsValues =
    [(Data.Text.Internal.Text, Language.NGLessObject)]
981539a3d822d712d304e04228931909
  boolOrTypeError ::
    Control.Monad.Error.Class.MonadError NGLess.NGError.NGError m =>
    GHC.Base.String -> Language.NGLessObject -> m GHC.Types.Bool
  {- Arity: 3,
     Strictness: <S,1*U(1*U(A,A,A,1*C1(U),A),1*C1(U),A)><L,1*U><S,1*U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ @ m :: * -> *
                   (w :: Control.Monad.Error.Class.MonadError
                           NGLess.NGError.NGError m)
                   (w1 :: GHC.Base.String)
                   (w2 :: Language.NGLessObject) ->
                 case w of ww { Control.Monad.Error.Class.C:MonadError ww1 ww2 ww3 ->
                 NGLess.$wboolOrTypeError @ m ww1 ww2 w1 w2 }) -}
1fa33d0017c91baa13be4377853a0728
  decodeSymbolOrError ::
    Control.Monad.Error.Class.MonadError NGLess.NGError.NGError m =>
    GHC.Base.String
    -> [(Data.Text.Internal.Text, a)] -> Data.Text.Internal.Text -> m a
  {- Arity: 4,
     Strictness: <S,1*U(1*U(A,A,A,1*C1(U),A),1*C1(U),A)><L,1*U><S,U><L,U(U,U,U)>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ @ m :: * -> *
                   @ a
                   (w :: Control.Monad.Error.Class.MonadError
                           NGLess.NGError.NGError m)
                   (w1 :: GHC.Base.String)
                   (w2 :: [(Data.Text.Internal.Text, a)])
                   (w3 :: Data.Text.Internal.Text) ->
                 case w of ww { Control.Monad.Error.Class.C:MonadError ww1 ww2 ww3 ->
                 NGLess.$wdecodeSymbolOrError @ m @ a ww1 ww2 w1 w2 w3 }) -}
32c119de659f9dc90950c5b28ad48799
  integerOrTypeError ::
    Control.Monad.Error.Class.MonadError NGLess.NGError.NGError m =>
    GHC.Base.String
    -> Language.NGLessObject -> m GHC.Integer.Type.Integer
  {- Arity: 3,
     Strictness: <S,1*U(1*U(A,A,A,1*C1(U),A),1*C1(U),A)><L,1*U><S,1*U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ @ m :: * -> *
                   (w :: Control.Monad.Error.Class.MonadError
                           NGLess.NGError.NGError m)
                   (w1 :: GHC.Base.String)
                   (w2 :: Language.NGLessObject) ->
                 case w of ww { Control.Monad.Error.Class.C:MonadError ww1 ww2 ww3 ->
                 NGLess.$wintegerOrTypeError @ m ww1 ww2 w1 w2 }) -}
ac5dfbcd132016b7efd70ddd1f68dbef
  lookupBoolOrScriptError ::
    Control.Monad.Error.Class.MonadError NGLess.NGError.NGError m =>
    GHC.Base.String
    -> Data.Text.Internal.Text
    -> NGLess.KwArgsValues
    -> m GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,U(U(A,A,A,C(U),A),C(U),A)><L,U><L,U(U,U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ m :: * -> *
                   ($dMonadError :: Control.Monad.Error.Class.MonadError
                                      NGLess.NGError.NGError m)
                   (eta :: GHC.Base.String)
                   (eta1 :: Data.Text.Internal.Text) ->
                 NGLess.requiredLookup
                   @ m
                   @ GHC.Types.Bool
                   $dMonadError
                   (NGLess.lookupBoolOrScriptErrorDef @ m $dMonadError)
                   eta
                   eta1) -}
ffe642effd69bd9a48ab477563baaa98
  lookupBoolOrScriptErrorDef ::
    Control.Monad.Error.Class.MonadError NGLess.NGError.NGError m =>
    m GHC.Types.Bool
    -> GHC.Base.String
    -> Data.Text.Internal.Text
    -> NGLess.KwArgsValues
    -> m GHC.Types.Bool
  {- Arity: 5,
     Strictness: <L,1*U(1*U(A,A,A,1*C1(U),A),1*C1(U),A)><L,1*U><L,1*U><L,U><S,1*U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ m :: * -> *
                   ($dMonadError :: Control.Monad.Error.Class.MonadError
                                      NGLess.NGError.NGError m)
                   (defval :: m GHC.Types.Bool)
                   (context :: GHC.Base.String)
                   (name :: Data.Text.Internal.Text)
                   (args :: NGLess.KwArgsValues) ->
                 case GHC.List.lookup
                        @ Data.Text.Internal.Text
                        @ Language.NGLessObject
                        Data.Text.$fEqText
                        name
                        args of wild {
                   GHC.Maybe.Nothing -> defval
                   GHC.Maybe.Just v
                   -> NGLess.boolOrTypeError @ m $dMonadError context v }) -}
44b0a3355074434726bc6ed04dfb3722
  lookupIntegerOrScriptError ::
    Control.Monad.Error.Class.MonadError NGLess.NGError.NGError m =>
    GHC.Base.String
    -> Data.Text.Internal.Text
    -> NGLess.KwArgsValues
    -> m GHC.Integer.Type.Integer
  {- Arity: 3,
     Strictness: <L,U(U(A,A,A,C(U),A),C(U),A)><L,U><L,U(U,U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ m :: * -> *
                   ($dMonadError :: Control.Monad.Error.Class.MonadError
                                      NGLess.NGError.NGError m)
                   (eta :: GHC.Base.String)
                   (eta1 :: Data.Text.Internal.Text) ->
                 NGLess.requiredLookup
                   @ m
                   @ GHC.Integer.Type.Integer
                   $dMonadError
                   (NGLess.lookupIntegerOrScriptErrorDef @ m $dMonadError)
                   eta
                   eta1) -}
34ade76886baf18c528fabb1196f99bb
  lookupIntegerOrScriptErrorDef ::
    Control.Monad.Error.Class.MonadError NGLess.NGError.NGError m =>
    m GHC.Integer.Type.Integer
    -> [GHC.Types.Char]
    -> Data.Text.Internal.Text
    -> [(Data.Text.Internal.Text, Language.NGLessObject)]
    -> m GHC.Integer.Type.Integer
  {- Arity: 5,
     Strictness: <L,1*U(1*U(A,A,A,1*C1(U),A),1*C1(U),A)><L,1*U><L,1*U><L,U(U,U,U)><S,1*U> -}
d7017754ce1f74bd5934f2d4b33604e2
  lookupStringListOrScriptError ::
    Control.Monad.Error.Class.MonadError NGLess.NGError.NGError m =>
    GHC.Base.String
    -> Data.Text.Internal.Text
    -> NGLess.KwArgsValues
    -> m [Data.Text.Internal.Text]
  {- Arity: 3,
     Strictness: <L,U(U(U(A,C(U),A,C(C1(C1(U))),A,A),A,A,C(U),A),C(U),A)><L,U><L,U(U,U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ m :: * -> *
                   ($dMonadError :: Control.Monad.Error.Class.MonadError
                                      NGLess.NGError.NGError m)
                   (eta :: GHC.Base.String)
                   (eta1 :: Data.Text.Internal.Text) ->
                 NGLess.requiredLookup
                   @ m
                   @ [Data.Text.Internal.Text]
                   $dMonadError
                   (NGLess.lookupStringListOrScriptErrorDef @ m $dMonadError)
                   eta
                   eta1) -}
b1abc6462818ea3664f4047b3a58bf06
  lookupStringListOrScriptErrorDef ::
    Control.Monad.Error.Class.MonadError NGLess.NGError.NGError m =>
    m [Data.Text.Internal.Text]
    -> GHC.Base.String
    -> Data.Text.Internal.Text
    -> NGLess.KwArgsValues
    -> m [Data.Text.Internal.Text]
  {- Arity: 5,
     Strictness: <L,U(U(1*U(A,1*C1(U),A,C(C1(C1(U))),A,A),A,A,C(U),A),C(U),A)><L,1*U><L,U><L,U(U,U,U)><S,1*U> -}
bc5829862d5b7f2576b249b0034f31cf
  lookupStringOrScriptError ::
    Control.Monad.Error.Class.MonadError NGLess.NGError.NGError m =>
    GHC.Base.String
    -> Data.Text.Internal.Text
    -> NGLess.KwArgsValues
    -> m Data.Text.Internal.Text
  {- Arity: 3,
     Strictness: <L,U(U(A,A,A,C(U),A),C(U),A)><L,U><L,U(U,U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ m :: * -> *
                   ($dMonadError :: Control.Monad.Error.Class.MonadError
                                      NGLess.NGError.NGError m)
                   (eta :: GHC.Base.String)
                   (eta1 :: Data.Text.Internal.Text) ->
                 NGLess.requiredLookup
                   @ m
                   @ Data.Text.Internal.Text
                   $dMonadError
                   (NGLess.lookupStringOrScriptErrorDef @ m $dMonadError)
                   eta
                   eta1) -}
091ee7c11152f594797c474536503c77
  lookupStringOrScriptErrorDef ::
    Control.Monad.Error.Class.MonadError NGLess.NGError.NGError m =>
    m Data.Text.Internal.Text
    -> GHC.Base.String
    -> Data.Text.Internal.Text
    -> NGLess.KwArgsValues
    -> m Data.Text.Internal.Text
  {- Arity: 5,
     Strictness: <L,1*U(1*U(A,A,A,1*C1(U),A),1*C1(U),A)><L,1*U><L,1*U><L,U(U,U,U)><S,1*U> -}
2e2705551e9a4c7093a0e8e9656ea52d
  lookupSymbolListOrScriptError ::
    Control.Monad.Error.Class.MonadError NGLess.NGError.NGError m =>
    GHC.Base.String
    -> Data.Text.Internal.Text
    -> NGLess.KwArgsValues
    -> m [Data.Text.Internal.Text]
  {- Arity: 3,
     Strictness: <L,U(U(U(A,C(U),A,C(C1(C1(U))),A,A),A,A,C(U),A),C(U),A)><L,U><L,U(U,U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ m :: * -> *
                   ($dMonadError :: Control.Monad.Error.Class.MonadError
                                      NGLess.NGError.NGError m)
                   (eta :: GHC.Base.String)
                   (eta1 :: Data.Text.Internal.Text) ->
                 NGLess.requiredLookup
                   @ m
                   @ [Data.Text.Internal.Text]
                   $dMonadError
                   (NGLess.lookupSymbolListOrScriptErrorDef @ m $dMonadError)
                   eta
                   eta1) -}
ec7682bf5e03b2b49cfc9bbbafe986fc
  lookupSymbolListOrScriptErrorDef ::
    Control.Monad.Error.Class.MonadError NGLess.NGError.NGError m =>
    m [Data.Text.Internal.Text]
    -> GHC.Base.String
    -> Data.Text.Internal.Text
    -> NGLess.KwArgsValues
    -> m [Data.Text.Internal.Text]
  {- Arity: 5,
     Strictness: <L,U(U(1*U(A,1*C1(U),A,C(C1(C1(U))),A,A),A,A,C(U),A),C(U),A)><L,1*U><L,U><L,U(U,U,U)><S,1*U> -}
9006b5db029bd38a899b12063da093b7
  lookupSymbolOrScriptError ::
    Control.Monad.Error.Class.MonadError NGLess.NGError.NGError m =>
    GHC.Base.String
    -> Data.Text.Internal.Text
    -> NGLess.KwArgsValues
    -> m Data.Text.Internal.Text
  {- Arity: 3,
     Strictness: <L,U(U(A,A,A,C(U),A),C(U),A)><L,U><L,U(U,U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ m :: * -> *
                   ($dMonadError :: Control.Monad.Error.Class.MonadError
                                      NGLess.NGError.NGError m)
                   (eta :: GHC.Base.String)
                   (eta1 :: Data.Text.Internal.Text) ->
                 NGLess.requiredLookup
                   @ m
                   @ Data.Text.Internal.Text
                   $dMonadError
                   (NGLess.lookupSymbolOrScriptErrorDef @ m $dMonadError)
                   eta
                   eta1) -}
a240a0fb0565b0f33a8458942701be2b
  lookupSymbolOrScriptErrorDef ::
    Control.Monad.Error.Class.MonadError NGLess.NGError.NGError m =>
    m Data.Text.Internal.Text
    -> [GHC.Types.Char]
    -> Data.Text.Internal.Text
    -> [(Data.Text.Internal.Text, Language.NGLessObject)]
    -> m Data.Text.Internal.Text
  {- Arity: 5,
     Strictness: <L,1*U(1*U(A,A,A,1*C1(U),A),1*C1(U),A)><L,1*U><L,1*U><L,U(U,U,U)><S,1*U> -}
611ef4b6f1f5e7ed0d2124a406ce18ee
  requiredLookup ::
    Control.Monad.Error.Class.MonadError NGLess.NGError.NGError m =>
    (m a
     -> GHC.Base.String
     -> Data.Text.Internal.Text
     -> NGLess.KwArgsValues
     -> m a)
    -> GHC.Base.String
    -> Data.Text.Internal.Text
    -> NGLess.KwArgsValues
    -> m a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,1*U(A,1*C1(U),A)><C(C(C(S))),1*C1(C1(C1(U)))><L,U><L,U(U,U,U)>,
     Unfolding: (\ @ m :: * -> *
                   @ a
                   ($dMonadError :: Control.Monad.Error.Class.MonadError
                                      NGLess.NGError.NGError m)
                   (withDefaultLookup :: m a
                                         -> GHC.Base.String
                                         -> Data.Text.Internal.Text
                                         -> NGLess.KwArgsValues
                                         -> m a)
                   (context :: GHC.Base.String)
                   (name :: Data.Text.Internal.Text) ->
                 withDefaultLookup
                   (Control.Monad.Error.Class.throwError
                      @ NGLess.NGError.NGError
                      @ m
                      $dMonadError
                      @ a
                      (case GHC.CString.unpackAppendCString#
                              "Could not find '"#
                              (case name of wild { Data.Text.Internal.Text dt dt1 dt2 ->
                               let {
                                 end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                               } in
                               letrec {
                                 $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                                   {- Arity: 1, Strictness: <S,U>, Inline: [2] -}
                                 = \ (ww :: GHC.Prim.Int#) ->
                                   case GHC.Prim.>=# ww end of lwild {
                                     DEFAULT
                                     -> case GHC.Prim.indexWord16Array# dt ww of r# { DEFAULT ->
                                        case GHC.Prim.geWord# r# 55296## of lwild1 {
                                          DEFAULT
                                          -> GHC.Types.:
                                               @ GHC.Types.Char
                                               (GHC.Types.C#
                                                  (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                               ($wunfold (GHC.Prim.+# ww 1#))
                                          1#
                                          -> case GHC.Prim.leWord# r# 56319## of lwild2 {
                                               DEFAULT
                                               -> GHC.Types.:
                                                    @ GHC.Types.Char
                                                    (GHC.Types.C#
                                                       (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                                    ($wunfold (GHC.Prim.+# ww 1#))
                                               1#
                                               -> case GHC.Prim.indexWord16Array#
                                                         dt
                                                         (GHC.Prim.+# ww 1#) of r#1 { DEFAULT ->
                                                  GHC.Types.:
                                                    @ GHC.Types.Char
                                                    (GHC.Types.C#
                                                       (GHC.Prim.chr#
                                                          (GHC.Prim.+#
                                                             9216#
                                                             (GHC.Prim.+#
                                                                (GHC.Prim.uncheckedIShiftL#
                                                                   (GHC.Prim.-#
                                                                      (GHC.Prim.word2Int# r#)
                                                                      55296#)
                                                                   10#)
                                                                (GHC.Prim.word2Int# r#1)))))
                                                    ($wunfold (GHC.Prim.+# ww 2#)) } } } }
                                     1# -> GHC.Types.[] @ GHC.Types.Char }
                               } in
                               GHC.Base.++
                                 @ GHC.Types.Char
                                 ($wunfold dt1)
                                 (GHC.CString.unpackAppendCString#
                                    " arguments (in context '"#
                                    (GHC.Base.++
                                       @ GHC.Types.Char
                                       context
                                       (GHC.CString.unpackCString# "')"#))) }) of dt { DEFAULT ->
                       NGLess.NGError.NGError NGLess.NGError.ScriptError dt }))
                   context
                   name) -}
5b029483db59fc3cf043cd5fbc4379a1
  stringOrTypeError ::
    Control.Monad.Error.Class.MonadError NGLess.NGError.NGError m =>
    GHC.Base.String
    -> Language.NGLessObject -> m Data.Text.Internal.Text
  {- Arity: 3,
     Strictness: <S,1*U(1*U(A,A,A,1*C1(U),A),1*C1(U),A)><L,1*U><S,1*U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ @ m :: * -> *
                   (w :: Control.Monad.Error.Class.MonadError
                           NGLess.NGError.NGError m)
                   (w1 :: GHC.Base.String)
                   (w2 :: Language.NGLessObject) ->
                 case w of ww { Control.Monad.Error.Class.C:MonadError ww1 ww2 ww3 ->
                 NGLess.$wstringOrTypeError @ m ww1 ww2 w1 w2 }) -}
ff6d0f8608f5840479e5de890e15f7b6
  symbolOrTypeError ::
    Control.Monad.Error.Class.MonadError NGLess.NGError.NGError m =>
    GHC.Base.String
    -> Language.NGLessObject -> m Data.Text.Internal.Text
  {- Arity: 3,
     Strictness: <S,1*U(1*U(A,A,A,1*C1(U),A),1*C1(U),A)><L,1*U><S,1*U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ @ m :: * -> *
                   (w :: Control.Monad.Error.Class.MonadError
                           NGLess.NGError.NGError m)
                   (w1 :: GHC.Base.String)
                   (w2 :: Language.NGLessObject) ->
                 case w of ww { Control.Monad.Error.Class.C:MonadError ww1 ww2 ww3 ->
                 NGLess.$wsymbolOrTypeError @ m ww1 ww2 w1 w2 }) -}
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

